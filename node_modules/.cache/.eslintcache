[{"/Users/aleksandrgolomazov/anime_project/src/index.js":"1","/Users/aleksandrgolomazov/anime_project/src/components/app/index.js":"2","/Users/aleksandrgolomazov/anime_project/src/components/app/app.js":"3","/Users/aleksandrgolomazov/anime_project/src/components/anime-list/index.js":"4","/Users/aleksandrgolomazov/anime_project/src/components/anime-header/index.js":"5","/Users/aleksandrgolomazov/anime_project/src/components/anime-header/anime-header.js":"6","/Users/aleksandrgolomazov/anime_project/src/components/anime-list/anime-list.js":"7","/Users/aleksandrgolomazov/anime_project/src/components/anime-list-item/index.js":"8","/Users/aleksandrgolomazov/anime_project/src/components/anime-list-item/anime-list-item.js":"9","/Users/aleksandrgolomazov/anime_project/src/services/anime-service.js":"10","/Users/aleksandrgolomazov/anime_project/src/components/anime-service-context/index.js":"11","/Users/aleksandrgolomazov/anime_project/src/components/anime-service-context/anime-service-context.js":"12","/Users/aleksandrgolomazov/anime_project/src/components/hoc/index.js":"13","/Users/aleksandrgolomazov/anime_project/src/actions/index.js":"14","/Users/aleksandrgolomazov/anime_project/src/components/hoc/with-anime-service.js":"15","/Users/aleksandrgolomazov/anime_project/src/store.js":"16","/Users/aleksandrgolomazov/anime_project/src/reducers/index.js":"17","/Users/aleksandrgolomazov/anime_project/src/components/anime-details/index.js":"18","/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js":"19","/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list/index.js":"20","/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list/anime-search-list.js":"21","/Users/aleksandrgolomazov/anime_project/src/reducers/anime-search-list.js":"22","/Users/aleksandrgolomazov/anime_project/src/reducers/anime-details.js":"23","/Users/aleksandrgolomazov/anime_project/src/reducers/anime-list.js":"24","/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list-item/index.js":"25","/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list-item/anime-search-list-item.js":"26","/Users/aleksandrgolomazov/anime_project/src/reducers/my-list.js":"27","/Users/aleksandrgolomazov/anime_project/src/components/my-list/index.js":"28","/Users/aleksandrgolomazov/anime_project/src/components/my-list/my-list.js":"29","/Users/aleksandrgolomazov/anime_project/src/components/my-list-item/index.js":"30","/Users/aleksandrgolomazov/anime_project/src/components/my-list-item/my-list-item.js":"31"},{"size":618,"mtime":1635183707357,"results":"32","hashOfConfig":"33"},{"size":45,"mtime":1635113216601,"results":"34","hashOfConfig":"33"},{"size":1170,"mtime":1636228654405,"results":"35","hashOfConfig":"33"},{"size":64,"mtime":1635114519763,"results":"36","hashOfConfig":"33"},{"size":70,"mtime":1635114347333,"results":"37","hashOfConfig":"33"},{"size":4549,"mtime":1636228709110,"results":"38","hashOfConfig":"33"},{"size":2615,"mtime":1636130668555,"results":"39","hashOfConfig":"33"},{"size":77,"mtime":1635118388998,"results":"40","hashOfConfig":"33"},{"size":888,"mtime":1635579050350,"results":"41","hashOfConfig":"33"},{"size":2378,"mtime":1635580751352,"results":"42","hashOfConfig":"33"},{"size":157,"mtime":1635120104118,"results":"43","hashOfConfig":"33"},{"size":197,"mtime":1635465125527,"results":"44","hashOfConfig":"33"},{"size":86,"mtime":1635171598640,"results":"45","hashOfConfig":"33"},{"size":1712,"mtime":1636200535336,"results":"46","hashOfConfig":"33"},{"size":536,"mtime":1635685144037,"results":"47","hashOfConfig":"33"},{"size":128,"mtime":1635168613424,"results":"48","hashOfConfig":"33"},{"size":487,"mtime":1636132445542,"results":"49","hashOfConfig":"33"},{"size":73,"mtime":1635183444426,"results":"50","hashOfConfig":"33"},{"size":9533,"mtime":1636298394065,"results":"51","hashOfConfig":"33"},{"size":83,"mtime":1635419915588,"results":"52","hashOfConfig":"33"},{"size":1428,"mtime":1636056420876,"results":"53","hashOfConfig":"33"},{"size":1561,"mtime":1636298394065,"results":"54","hashOfConfig":"33"},{"size":892,"mtime":1636049849773,"results":"55","hashOfConfig":"33"},{"size":1426,"mtime":1636298394065,"results":"56","hashOfConfig":"33"},{"size":96,"mtime":1635464295414,"results":"57","hashOfConfig":"33"},{"size":745,"mtime":1635466474188,"results":"58","hashOfConfig":"33"},{"size":562,"mtime":1636298394065,"results":"59","hashOfConfig":"33"},{"size":53,"mtime":1636235190760,"results":"60","hashOfConfig":"33"},{"size":2036,"mtime":1636298394065,"results":"61","hashOfConfig":"33"},{"size":68,"mtime":1636235188285,"results":"62","hashOfConfig":"33"},{"size":2269,"mtime":1636241382312,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vn8wzd",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},"/Users/aleksandrgolomazov/anime_project/src/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/app/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/app/app.js",["135","136"],"import React from 'react'\nimport AnimeHeader from '../anime-header'\nimport AnimeList from '../anime-list'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport AnimeDetails from '../anime-details';\nimport AnimeSearchList from '../anime-search-list';\nimport MyList from '../my-list';\nimport './app.css'\n\n\nconst App = () => {\n    return (\n        <main className=\"bg-dark\" style={{ minHeight: \"100vh\" }} >\n            <AnimeHeader />\n            <AnimeSearchList />\n            <Switch>\n                <Route path=\"/animes/search/:name\" render={() => {\n                    console.log('ROUUUUTE');\n                    return (\n                        <AnimeList url={\"rrrr\"} />\n                    )\n                }} exact />\n\n\n                <Route path=\"/animes\" component={AnimeList} exact />\n\n                <Route path=\"/animes/:id\" render={({ match }) => {\n                    const { id } = match.params;\n                    return <AnimeDetails id={id} />\n                }} exact />\n\n                <Route path=\"/myList\" component={MyList} exact />\n\n            </Switch>\n        </main >\n    );\n};\n\nexport default App;","/Users/aleksandrgolomazov/anime_project/src/components/anime-list/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-header/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-header/anime-header.js",["137","138","139","140"],"import React, { Component } from \"react\";\nimport './anime-header.css'\nimport withAnimeService from \"../hoc\";\nimport { connect } from \"react-redux\";\nimport {\n    animeSearchListRequested, animeSearchListLoaded, animeSearchListClear,\n    makeListVisible, makeListInvisible\n} from '../../actions'\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport store from \"../../store\";\n\n\nconst AnimeHeader = ({ animeService, animeSearchListRequested, animeSearchListLoaded,\n    animeSearchListClear, makeListVisible, history, makeListInvisible }) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark  sticky-top\">\n            <a className=\"navbar-brand\" href=\"#\">Anime</a>\n            <button onClick={() => makeListInvisible()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/animes\">Ongoings<span class=\"sr-only\">(current)</span></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/myList\">My list</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link disabled\" href=\"#\">Games</Link>\n                    </li>\n                </ul>\n                <form className=\"search-form form-inline my-2 my-lg-0\" style={{ zIndex: '99999' }} action=\"/animes\">\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\"\n                        onClick={searchClick(makeListVisible)} onInput={searchAnimes(animeService,\n                            animeSearchListRequested, animeSearchListLoaded, animeSearchListClear,\n                            makeListVisible)} name=\"search\" />\n                    <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"button\" onClick={pushSearchButton(history)}  >Search</button>\n                </form>\n            </div >\n        </nav >\n    )\n}\n\nconst pushSearchButton = (history) => (event) => {\n    const value = document.querySelector('.search-form').children[0].value;\n    history.push(`/animes?search=${value}`);\n\n}\n\nconst searchAnimes = (animeService, request, loading, clearing, visible) => (event) => {\n    visible();\n    if (event.target.value.length === 0) {\n        clearing();\n    }\n    else {\n        request();\n        animeService.searchAnimes(event.target.value).then(res => loading(res))\n    }\n}\n\n//Make refactoring \n\nconst searchClick = (visible) => (event) => {\n    const form = document.querySelector('.search-form');\n    const nav = document.querySelector('nav');\n    const searchList = document.querySelector('.search-list');\n\n    visible();\n    searchList.style.width = window.getComputedStyle(form).getPropertyValue(\"width\")\n    searchList.style.top = window.getComputedStyle(nav).getPropertyValue(\"height\")\n    searchList.style.right = window.getComputedStyle(nav).getPropertyValue(\"padding-right\")\n\n}\n\nlet shift = false;\nwindow.addEventListener(`resize`, event => {\n\n    const form = document.querySelector('.search-form')\n    const nav = document.querySelector('nav');\n    const toggle = document.querySelector('.navbar-toggler');\n    if (window.getComputedStyle(toggle).getPropertyValue(\"display\") != 'none' && shift === false) {\n        store.dispatch(makeListInvisible())\n        shift = true;\n    }\n\n    if (window.getComputedStyle(toggle).getPropertyValue(\"display\") != 'block' && shift === true) {\n        store.dispatch(makeListInvisible())\n        shift = false;\n    }\n    const searchList = document.querySelector('.search-list');\n    searchList.style.width = window.getComputedStyle(form).getPropertyValue(\"width\")\n    searchList.style.top = window.getComputedStyle(nav).getPropertyValue(\"height\")\n    searchList.style.right = window.getComputedStyle(nav).getPropertyValue(\"padding-right\")\n}, false);\n\n\n\n//Make refactoring \n\nconst actions = {\n    animeSearchListRequested, animeSearchListLoaded,\n    animeSearchListClear, makeListVisible, makeListInvisible\n}\n\nexport default withRouter(withAnimeService()(connect(null, actions)(AnimeHeader)));\n\n","/Users/aleksandrgolomazov/anime_project/src/components/anime-list/anime-list.js",["141"],"import React, { Component } from \"react\";\nimport './anime-list.css';\nimport AnimeListItem from \"../anime-list-item\";\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\nimport * as qs from 'qs';\n\n\nconst AnimeList = ({ animes }) => {\n    return (\n        <ul className=\"anime-list\">\n            {\n                animes.map((anime) => {\n                    return (\n                        <li key={anime.id} >\n                            <AnimeListItem title={anime.name} image={anime.image} id={anime.id} />\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nclass AnimeListContainer extends Component {\n\n    componentDidMount() {\n        this.props.animeListRequested()\n        this.searchCheck()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            const { search } = (qs.parse(this.props.location.search, { ignoreQueryPrefix: true }))\n            this.props.animeListRequested()\n            this.searchCheck()\n        }\n    }\n\n    searchCheck() {\n        const { search } = (qs.parse(this.props.location.search, { ignoreQueryPrefix: true }))\n        if (search) {\n            this.props.animeService.searchAnimes(search, 30).then(res => this.props.animeListLoaded(res))\n            window.removeEventListener('scroll', this.scroll, false)\n        }\n        else {\n            this.props.animeService.getOngoings(15).then(res => this.props.animeListLoaded(res))\n            window.addEventListener('scroll', this.scroll, false)\n\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.scroll, false)\n    }\n\n    scroll = () => {\n        const block = document.querySelector('.anime-list');\n        const contentHeight = block.offsetHeight;\n        const yOffset = window.pageYOffset;\n        const window_height = window.innerHeight;\n        const y = yOffset + window_height;\n        if (y >= contentHeight) {\n            console.log(this)\n            this.props.animeListAnimesRequested()\n            this.props.animeService.getAdditionalOngoings(this.props.page, 15).then(res => this.props.animeListAnimesLoaded(res))\n        }\n    }\n    render() {\n        return <AnimeList animes={this.props.animes} />\n    }\n\n}\n\nconst mapStatetoProps = ({ animeList: { animes, loading, error, page } }) => {\n    return { animes, loading, error, page };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeListContainer)))","/Users/aleksandrgolomazov/anime_project/src/components/anime-list-item/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-list-item/anime-list-item.js",["142"],"import React from \"react\";\nimport './anime-list-item.css';\nimport { Link } from 'react-router-dom';\n\n\nconst AnimeListItem = ({ id, title, image }) => {\n    const url = `/animes/${id}`\n    return (\n\n        <div className=\"anime-item\">\n            <Link to={url} className=\"anime-field\" onMouseOver={changeItemSize} onMouseOut={changeItemSize}>\n                <img src={image} alt=\"cover\" className=\"anime-image\" />\n                <footer className=\"text-light\">\n                    {title}\n                </footer>\n            </Link >\n        </div>\n\n    )\n}\n\nconst changeItemSize = (event) => {\n    const img = event.nativeEvent.path[1].children[0];\n    if (event.type == \"mouseover\") {\n        img.style.height = '334.4px'\n        img.style.width = '100%';\n    }\n\n    else {\n        img.style.height = '313.5px'\n        img.style.width = '95%'\n    }\n}\n\nexport default AnimeListItem;","/Users/aleksandrgolomazov/anime_project/src/services/anime-service.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-service-context/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-service-context/anime-service-context.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/hoc/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/actions/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/hoc/with-anime-service.js",["143"],"import React from \"react\";\nimport { AnimeServiceConsumer, AnimeServiceProvider } from \"../anime-service-context\";\n\nconst withAnimeService = () => (Wrapped) => {\n\n    return (props) => {\n        return (\n            <AnimeServiceConsumer>\n                {\n                    (animeService) => {\n                        return (<Wrapped {...props}\n                            animeService={animeService} />);\n                    }\n                }\n            </AnimeServiceConsumer>\n        )\n    }\n}\n\nexport default withAnimeService;","/Users/aleksandrgolomazov/anime_project/src/store.js",[],"/Users/aleksandrgolomazov/anime_project/src/reducers/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-details/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js",["144","145","146","147","148"],"import React, { Component, useEffect, useState } from \"react\";\nimport './anime-details.css'\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\n\n\nconst AnimeDetails = ({ anime, removeAnime, addAnime, myList, episodesRef, gradeRef }) => {\n    const animeListItem = myList.find(animeListItem => animeListItem.id === anime.id);\n    const [category, setCategory] = useState(\"No category\")\n    const [episodes, setEpisodes] = useState(0)\n    const [grade, setGrade] = useState(0)\n    useEffect(() => {\n        if (animeListItem) {\n            setCategory(animeListItem.category);\n            setEpisodes(animeListItem.episodes);\n            setGrade(animeListItem.grade);\n        }\n        else {\n            setCategory(\"No category\")\n            setEpisodes(0)\n            setGrade(0)\n        }\n\n        if (category === \"No category\") {\n            episodesRef.current.style.visibility = \"hidden\"\n            gradeRef.current.style.visibility = \"hidden\"\n            episodesRef.current.style.position = \"absolute\"\n            gradeRef.current.style.position = \"absolute\"\n\n        }\n        else {\n            episodesRef.current.style.visibility = \"visible\"\n            gradeRef.current.style.visibility = \"visible\"\n            episodesRef.current.style.position = \"static\"\n            gradeRef.current.style.position = \"static\"\n        }\n\n        if (category === \"Watched\" || category === \"No category\") {\n            episodesRef.current.children[1].children[0].style.visibility = \"hidden\"\n            episodesRef.current.children[1].children[1].style.visibility = \"hidden\"\n        }\n        else {\n            episodesRef.current.children[1].children[0].style.visibility = \"visible\"\n            episodesRef.current.children[1].children[1].style.visibility = \"visible\"\n        }\n    })\n    return (\n        <div className=\"container-fluid mt-5 text-light\" >\n            <div className=\"row\">\n                <div className=\"col-xl-2 col-lg-3 col-md-4 d-flex flex-column justify-content-center\">\n                    <img src={anime.image} className=\"img-fluid rounded mb-3 \" />\n                    <select value={category} onChange={selectCategory({ category, episodes, grade },\n                        { removeAnime, addAnime, anime })} class=\"custom-select mb-3\">\n                        <option value=\"No category\">Нет категории</option>\n                        <option value=\"Scheduled\">Запланированно</option>\n                        <option value=\"Watching\">Смотрю</option>\n                        <option value=\"Watched\">Просмотрено</option>\n                        <option value=\"Dropped\">Брошено</option>\n                    </select>\n                    <div ref={episodesRef} className=\"mb-3 d-flex justify-content-between align-items-center\" style={{ visibility: \"hidden\", position: \"absolute\" }}>\n                        <span className=\"\">Эпизоды: <span>{episodes}</span>/<span>{anime.episodes > 0 ? anime.episodes : anime.episodes_aired}</span></span>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\n                            <button type=\"button\" onClick={pushButton(-1, { category, episodes, grade },\n                                { removeAnime, addAnime, anime })} class=\"btn btn-danger\">-</button>\n                            <button type=\"button\" onClick={pushButton(1, { category, episodes, grade },\n                                { removeAnime, addAnime, anime })} class=\"btn btn-success\">+</button>\n                        </div>\n                    </div>\n                    <div ref={gradeRef} className=\"mb-3 d-flex justify-content-center align-items-baseline\" style={{ visibility: \"hidden\", position: \"absolute\" }}>\n                        <span className=\"col-5 p-0\" style={{ display: \"inline-block\" }}>Оценка:</span>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text bg-warning\" id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star\" viewBox=\"0 0 16 16\">\n                                <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\n                            </svg></span>\n                            <input type=\"number\" value={grade} onChange={addGrade({ category, episodes, grade },\n                                { removeAnime, addAnime, anime })} className=\"form-control\" placeholder=\"Оценка\" aria-label=\"Grade\" aria-describedby=\"basic-addon1\" max=\"10\" min=\"0\" />\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <h1 className=\"\">{anime.name}</h1>\n                    <ul className=\"p-0\">\n                        <li className=\"mb-3\">Рейтинг: <span className=\"text-secondary\">{anime.score}</span></li>\n                        <li className=\"mb-3\">Количество эпизодов:  <span className=\"text-secondary\">{anime.episodes > 0 ? anime.episodes : anime.episodes_aired}</span></li>\n                        <li className=\"mb-3\">Жанры: {anime.genres.map((genre, index) => {\n\n                            if (index !== anime.genres.length - 1) {\n                                return (\n                                    <span className=\"text-secondary\"> {genre.russian},</span>\n                                )\n                            }\n                            else {\n                                return (\n                                    <span className=\"text-secondary\"> {genre.russian}</span>\n                                )\n                            }\n                        }\n                        )}</li>\n                        <li className=\"mb-3\">Описание: <span className=\"text-secondary\">{anime.description}</span></li>\n                    </ul>\n                </div>\n\n            </div>\n        </div >\n\n    )\n}\n\nconst selectCategory = (state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    const episodesLimit = anime.episodes > 0 ? anime.episodes : anime.episodes_aired;\n    removeAnime(anime)\n    if (event.target.value !== \"No category\") {\n        if (event.target.value === \"Watched\") episodes = episodesLimit;\n        const animeItem = { id: anime.id, name: anime.name, episodes, grade, category: event.target.value, episodesLimit }\n        addAnime(animeItem)\n    }\n}\n\nconst pushButton = (number, state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    let episodesNum = episodes + number;\n    const episodesLimit = anime.episodes > 0 ? anime.episodes : anime.episodes_aired;\n    removeAnime(anime)\n    if (episodesNum < 0) episodesNum = 0\n    if (episodesNum >= episodesLimit) {\n        episodesNum = episodesLimit\n        category = \"Watched\"\n    }\n    const animeItem = { id: anime.id, name: anime.name, episodes: episodesNum, grade, category, episodesLimit }\n    addAnime(animeItem)\n}\n\nconst addGrade = (state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    const episodesLimit = anime.episodes > 0 ? anime.episodes : anime.episodes_aired;\n    let value = event.target.value;\n    if (value > 10) value = 10\n    if (value < 0) value = 0\n    removeAnime(anime)\n    const animeItem = { id: anime.id, name: anime.name, episodes, grade: value, category, episodesLimit }\n    addAnime(animeItem)\n}\nclass AnimeDetailsContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.episodes = React.createRef();\n        this.grade = React.createRef();\n        this.category = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.props.animeRequested()\n        this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location != this.props.location) {\n            console.log(\"detail update\")\n\n            this.props.animeRequested()\n            this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n        }\n\n    }\n\n    render() {\n        if (Object.keys(this.props.anime).length) {\n            return <AnimeDetails anime={this.props.anime} episodesRef={this.episodes}\n                gradeRef={this.grade} removeAnime={this.props.removeFromMyList} addAnime={this.props.addToMyList}\n                myList={this.props.animes} category={this.category} />\n        }\n        else {\n            return \"nnnn\"\n        }\n    }\n}\n\n\n\nconst mapStatetoProps = ({ animeDetails: { anime, loading, error }, myList: { animes } }) => {\n    return { anime, loading, error, animes };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)))\n","/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list/anime-search-list.js",[],"/Users/aleksandrgolomazov/anime_project/src/reducers/anime-search-list.js",[],"/Users/aleksandrgolomazov/anime_project/src/reducers/anime-details.js",[],"/Users/aleksandrgolomazov/anime_project/src/reducers/anime-list.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list-item/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/anime-search-list-item/anime-search-list-item.js",["149"],"import React from \"react\";\nimport './anime-search-list-item.css';\nimport { Link } from 'react-router-dom';\n\n\nconst AnimeSearchListItem = ({ id, name, image }) => {\n    const url = `/animes/${id}`\n    return (\n        <Link to={url}>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-3\">\n                        <img src={image} className=\"anime-image-for-search\" />\n                    </div>\n                    <div class=\"col-9 d-flex flex-column justify-content-center text-start\">\n                        <span className=\"anime-name-search\">{name}</span>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default AnimeSearchListItem;","/Users/aleksandrgolomazov/anime_project/src/reducers/my-list.js",["150"],"const updateMyList = (state, action) => {\n    if (state === undefined) {\n        return {\n            animes: []\n        };\n    }\n    switch (action.type) {\n        case 'REMOVE_FROM_MY_LIST': {\n            return {\n                animes: state.myList.animes.filter(anime => anime.id != action.payload.id),\n            }\n        }\n        case 'ADD_TO_MY_LIST': {\n            return {\n                animes: [...state.myList.animes, action.payload]\n            }\n        }\n        default:\n            return state.myList;\n    }\n}\n\nexport default updateMyList;","/Users/aleksandrgolomazov/anime_project/src/components/my-list/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/my-list/my-list.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/my-list-item/index.js",[],"/Users/aleksandrgolomazov/anime_project/src/components/my-list-item/my-list-item.js",["151","152"],"import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./my-list-item.css\"\nimport { addToMyList, removeFromMyList } from \"../../actions\"\nimport { connect } from \"react-redux\";\n\n\n\nconst MyListItem = ({ anime, addToMyList, removeFromMyList }) => {\n    const [grade, setGrade] = useState(anime.grade);\n    const [episodes, setEpisodes] = useState(anime.episodes);\n    return (\n        <Fragment>\n            <td className=\"name\">\n                <Link to={`/animes/${anime.id}`}>{anime.name}</Link>\n            </td>\n            <td className=\"episodes\">\n                <div className=\"content-wrapper\">\n                    <input className=\"my-list-item-stats\" type=\"text\" value={episodes} onBlur={changeEpisodes(anime, episodes, addToMyList, removeFromMyList)}\n                        onChange={handleEpisodesChange(setEpisodes, anime.episodesLimit)} />\n                </div>\n            </td>\n            <td className=\"grade\">\n                <div className=\"content-wrapper\">\n                    <input className=\"my-list-item-stats\" onBlur={changeGrade(anime, grade, addToMyList, removeFromMyList)} type=\"text\"\n                        onChange={handeGradeChange(setGrade)} value={grade} />\n                </div>\n            </td>\n        </Fragment>\n    )\n}\n\nconst handleEpisodesChange = (setEpisodes, limit) => (event) => {\n    let value = parseInt(event.target.value.replace(/\\D/, ''))\n    if (event.target.value == '') value = 0;\n    if (value <= limit && value >= 0) {\n        setEpisodes(value)\n    }\n}\n\nconst changeEpisodes = (anime, episodes, addToMyList, removeFromMyList) => () => {\n    removeFromMyList(anime)\n    const newItem = { ...anime, episodes }\n    addToMyList(newItem);\n}\nconst handeGradeChange = (setGrade) => (event) => {\n    let value = parseInt(event.target.value.replace(/\\D/, ''))\n    if (event.target.value == '') value = 0;\n    if (value <= 10 && value >= 0) {\n        setGrade(value)\n    }\n\n}\nconst changeGrade = (anime, grade, addToMyList, removeFromMyList) => () => {\n    console.log(anime)\n    removeFromMyList(anime)\n    const newItem = { ...anime, grade }\n    addToMyList(newItem);\n}\n\nconst actions = { addToMyList, removeFromMyList }\nexport default connect(null, actions)(MyListItem);",{"ruleId":"153","severity":1,"message":"154","line":4,"column":27,"nodeType":"155","messageId":"156","endLine":4,"endColumn":33},{"ruleId":"153","severity":1,"message":"157","line":4,"column":50,"nodeType":"155","messageId":"156","endLine":4,"endColumn":58},{"ruleId":"153","severity":1,"message":"158","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"159","severity":1,"message":"160","line":18,"column":13,"nodeType":"161","endLine":18,"endColumn":50},{"ruleId":"162","severity":1,"message":"163","line":83,"column":69,"nodeType":"164","messageId":"165","endLine":83,"endColumn":71},{"ruleId":"162","severity":1,"message":"163","line":88,"column":69,"nodeType":"164","messageId":"165","endLine":88,"endColumn":71},{"ruleId":"153","severity":1,"message":"166","line":36,"column":21,"nodeType":"155","messageId":"156","endLine":36,"endColumn":27},{"ruleId":"162","severity":1,"message":"167","line":24,"column":20,"nodeType":"164","messageId":"165","endLine":24,"endColumn":22},{"ruleId":"153","severity":1,"message":"168","line":2,"column":32,"nodeType":"155","messageId":"156","endLine":2,"endColumn":52},{"ruleId":"169","severity":1,"message":"170","line":14,"column":5,"nodeType":"155","endLine":14,"endColumn":14,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":53,"column":21,"nodeType":"161","endLine":53,"endColumn":82},{"ruleId":"153","severity":1,"message":"174","line":113,"column":11,"nodeType":"155","messageId":"156","endLine":113,"endColumn":19},{"ruleId":"153","severity":1,"message":"175","line":140,"column":31,"nodeType":"155","messageId":"156","endLine":140,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":165,"column":32,"nodeType":"164","messageId":"165","endLine":165,"endColumn":34},{"ruleId":"172","severity":1,"message":"173","line":13,"column":25,"nodeType":"161","endLine":13,"endColumn":79},{"ruleId":"162","severity":1,"message":"163","line":10,"column":70,"nodeType":"164","messageId":"165","endLine":10,"endColumn":72},{"ruleId":"162","severity":1,"message":"167","line":35,"column":28,"nodeType":"164","messageId":"165","endLine":35,"endColumn":30},{"ruleId":"162","severity":1,"message":"167","line":48,"column":28,"nodeType":"164","messageId":"165","endLine":48,"endColumn":30},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'search' is assigned a value but never used.","Expected '===' and instead saw '=='.","'AnimeServiceProvider' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setCategory'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [animeListItem, category, episodesRef, gradeRef] as a second argument to the useEffect Hook.",["176"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'category' is assigned a value but never used.","'grade' is assigned a value but never used.",{"desc":"177","fix":"178"},"Add dependencies array: [animeListItem, category, episodesRef, gradeRef]",{"range":"179","text":"180"},[1894,1894],", [animeListItem, category, episodesRef, gradeRef]"]