{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrgolomazov/anime_project/src/components/anime-list/anime-list.js\";\nimport React, { Component } from \"react\";\nimport './anime-list.css';\nimport AnimeListItem from \"../anime-list-item\";\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeList = ({\n  animes\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"book-list\",\n    children: animes.map(anime => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(AnimeListItem, {\n          title: anime.name,\n          image: anime.image,\n          id: anime.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 29\n        }, this)\n      }, anime.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AnimeList;\n\nclass AnimeListContainer extends Component {\n  componentDidMount() {\n    console.log('DIDMOUNT');\n    console.log(this.props.location);\n    this.props.ongoingsRequested();\n    this.props.animeService.getOngoings(14).then(res => this.props.ongoingsLoaded(res));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      console.log('UPDATE');\n      console.log(this.props.location);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AnimeList, {\n      animes: this.props.animes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStatetoProps = ({\n  animeList: {\n    animes,\n    loading,\n    error\n  }\n}) => {\n  return {\n    animes,\n    loading,\n    error\n  };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeListContainer)));\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeList\");","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/components/anime-list/anime-list.js"],"names":["React","Component","AnimeListItem","connect","withAnimeService","actions","withRouter","AnimeList","animes","map","anime","name","image","id","AnimeListContainer","componentDidMount","console","log","props","location","ongoingsRequested","animeService","getOngoings","then","res","ongoingsLoaded","componentDidUpdate","prevProps","render","mapStatetoProps","animeList","loading","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,kBAAP;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,QAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC9B,sBACI;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA,cAGQA,MAAM,CAACC,GAAP,CAAYC,KAAD,IAAW;AAClB,0BACI;AAAA,+BACI,QAAC,aAAD;AAAe,UAAA,KAAK,EAAEA,KAAK,CAACC,IAA5B;AAAkC,UAAA,KAAK,EAAED,KAAK,CAACE,KAA/C;AAAsD,UAAA,EAAE,EAAEF,KAAK,CAACG;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ,SAASH,KAAK,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KAND;AAHR;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAhBD;;KAAMN,S;;AAkBN,MAAMO,kBAAN,SAAiCb,SAAjC,CAA2C;AACvCc,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AACA,SAAKD,KAAL,CAAWE,iBAAX;AACA,SAAKF,KAAL,CAAWG,YAAX,CAAwBC,WAAxB,CAAoC,EAApC,EAAwCC,IAAxC,CAA6CC,GAAG,IAAI,KAAKN,KAAL,CAAWO,cAAX,CAA0BD,GAA1B,CAApD;AAEH;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKT,KAAL,CAAWC,QAAX,KAAwBQ,SAAS,CAACR,QAAtC,EAAgD;AAC5CH,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AACH;AAGJ;;AAEDS,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWV;AAA9B;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AApBsC;;AAwB3C,MAAMqB,eAAe,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAE;AAAEtB,IAAAA,MAAF;AAAUuB,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB;AAAb,CAAD,KAA+C;AACnE,SAAO;AAAExB,IAAAA,MAAF;AAAUuB,IAAAA,OAAV;AAAmBC,IAAAA;AAAnB,GAAP;AACH,CAFD;;AAKA,eAAe1B,UAAU,CAACF,gBAAgB,GAAGD,OAAO,CAAC0B,eAAD,EAAkBxB,OAAlB,CAAP,CAAkCS,kBAAlC,CAAH,CAAjB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport './anime-list.css';\nimport AnimeListItem from \"../anime-list-item\";\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\n\nconst AnimeList = ({ animes }) => {\n    return (\n        <ul className=\"book-list\">\n\n            {\n                animes.map((anime) => {\n                    return (\n                        <li key={anime.id} >\n                            <AnimeListItem title={anime.name} image={anime.image} id={anime.id} />\n                        </li>\n                    )\n                })\n            }\n\n        </ul>\n    )\n}\n\nclass AnimeListContainer extends Component {\n    componentDidMount() {\n        console.log('DIDMOUNT')\n        console.log(this.props.location)\n        this.props.ongoingsRequested()\n        this.props.animeService.getOngoings(14).then(res => this.props.ongoingsLoaded(res))\n\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            console.log('UPDATE')\n            console.log(this.props.location)\n        }\n\n\n    }\n\n    render() {\n        return <AnimeList animes={this.props.animes} />\n    }\n\n}\n\nconst mapStatetoProps = ({ animeList: { animes, loading, error } }) => {\n    return { animes, loading, error };\n};\n\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeListContainer)))"]},"metadata":{},"sourceType":"module"}