{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrgolomazov/anime_project/src/components/my-list-item/my-list-item.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./my-list-item.css\";\nimport { addToMyList, removeFromMyList } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyListItem = ({\n  anime,\n  addToMyList,\n  removeFromMyList\n}) => {\n  _s();\n\n  const [grade, setGrade] = useState(anime.grade);\n  const [episodes, setEpisodes] = useState(anime.episodes);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"name\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/animes/${anime.id}`,\n        children: anime.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"episodes\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"my-list-item-stats\",\n        type: \"text\",\n        value: episodes,\n        onBlur: changeEpisodes(anime, episodes, addToMyList, removeFromMyList),\n        onChange: handleEpisodesChange(setEpisodes, anime.episodesLimit)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"grade\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"my-list-item-stats\",\n        onBlur: changeGrade(anime, grade, addToMyList, removeFromMyList),\n        type: \"text\",\n        onChange: handeGradeChange(setGrade),\n        value: grade\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyListItem, \"rUi+J+DsG2/5OurxkhOrmt5cWhQ=\");\n\n_c = MyListItem;\n\nconst handleEpisodesChange = (setEpisodes, limit) => event => {\n  if (event.target.value <= limit && event.target.value >= 0) {\n    setEpisodes(parseInt(event.target.value));\n  }\n};\n\nconst changeEpisodes = (anime, episodes, addToMyList, removeFromMyList) => () => {\n  removeFromMyList(anime);\n  const newItem = { ...anime,\n    episodes\n  };\n  addToMyList(newItem);\n};\n\nconst handeGradeChange = setGrade => event => {\n  if (event.target.value <= 10 && event.target.value >= 0) {\n    setGrade(parseInt(event.target.value));\n  }\n};\n\nconst changeGrade = (anime, grade, addToMyList, removeFromMyList) => () => {\n  removeFromMyList(anime);\n  const newItem = { ...anime,\n    grade\n  };\n  addToMyList(newItem);\n};\n\nconst actions = {\n  addToMyList,\n  removeFromMyList\n};\nexport default connect(null, actions)(MyListItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyListItem\");","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/components/my-list-item/my-list-item.js"],"names":["React","Fragment","useState","Link","addToMyList","removeFromMyList","connect","MyListItem","anime","grade","setGrade","episodes","setEpisodes","id","name","changeEpisodes","handleEpisodesChange","episodesLimit","changeGrade","handeGradeChange","limit","event","target","value","parseInt","newItem","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./my-list-item.css\"\nimport { addToMyList, removeFromMyList } from \"../../actions\"\nimport { connect } from \"react-redux\";\n\n\n\nconst MyListItem = ({ anime, addToMyList, removeFromMyList }) => {\n    const [grade, setGrade] = useState(anime.grade);\n    const [episodes, setEpisodes] = useState(anime.episodes);\n    return (\n        <Fragment>\n            <td className=\"name\">\n                <Link to={`/animes/${anime.id}`}>{anime.name}</Link>\n            </td>\n            <td className=\"episodes\">\n                <input className=\"my-list-item-stats\" type=\"text\" value={episodes} onBlur={changeEpisodes(anime, episodes, addToMyList, removeFromMyList)}\n                    onChange={handleEpisodesChange(setEpisodes, anime.episodesLimit)} />\n            </td>\n            <td className=\"grade\">\n                <input className=\"my-list-item-stats\" onBlur={changeGrade(anime, grade, addToMyList, removeFromMyList)} type=\"text\"\n                    onChange={handeGradeChange(setGrade)} value={grade} />\n            </td>\n        </Fragment>\n    )\n}\n\nconst handleEpisodesChange = (setEpisodes, limit) => (event) => {\n    if (event.target.value <= limit && event.target.value >= 0) {\n        setEpisodes(parseInt(event.target.value))\n    }\n}\n\nconst changeEpisodes = (anime, episodes, addToMyList, removeFromMyList) => () => {\n    removeFromMyList(anime)\n    const newItem = { ...anime, episodes }\n    addToMyList(newItem);\n}\nconst handeGradeChange = (setGrade) => (event) => {\n    if (event.target.value <= 10 && event.target.value >= 0) {\n        setGrade(parseInt(event.target.value))\n    }\n\n}\nconst changeGrade = (anime, grade, addToMyList, removeFromMyList) => () => {\n    removeFromMyList(anime)\n    const newItem = { ...anime, grade }\n    addToMyList(newItem);\n}\n\nconst actions = { addToMyList, removeFromMyList }\nexport default connect(null, actions)(MyListItem);"]},"metadata":{},"sourceType":"module"}