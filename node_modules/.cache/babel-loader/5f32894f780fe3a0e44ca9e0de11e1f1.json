{"ast":null,"code":"const updateMyLists = (state, action) => {\n  if (state === undefined) {\n    return {\n      scheduled: [],\n      watching: [],\n      watched: [],\n      dropped: []\n    };\n  }\n\n  switch (action.type) {\n    case 'REMOVE_FROM_MY_LISTS':\n      {\n        return {\n          scheduled: state.myLists.scheduled.filter(anime => anime.id != action.payload.id),\n          watching: state.myLists.watching.filter(anime => anime.id != action.payload.id),\n          watched: state.myLists.watched.filter(anime => anime.id != action.payload.id),\n          dropped: state.myLists.dropped.filter(anime => anime.id != action.payload.id)\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_SCHEDULED':\n      {\n        return { ...state.myLists,\n          scheduled: [...state.myLists.scheduled, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_WATCHING':\n      {\n        return { ...state.myLists,\n          watching: [...state.myLists.watching, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_WATCHED':\n      {\n        return { ...state.myLists,\n          watched: [...state.myLists.watched, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_DROPPED':\n      {\n        return { ...state.myLists,\n          dropped: [...state.myLists.dropped, action.payload]\n        };\n      }\n\n    default:\n      return state.myLists;\n  }\n};\n\nexport default updateMyLists;","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/reducers/my-lists.js"],"names":["updateMyLists","state","action","undefined","scheduled","watching","watched","dropped","type","myLists","filter","anime","id","payload"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAID,KAAK,KAAKE,SAAd,EAAyB;AACrB,WAAO;AACHC,MAAAA,SAAS,EAAE,EADR;AAEHC,MAAAA,QAAQ,EAAE,EAFP;AAGHC,MAAAA,OAAO,EAAE,EAHN;AAIHC,MAAAA,OAAO,EAAE;AAJN,KAAP;AAMH;;AACD,UAAQL,MAAM,CAACM,IAAf;AACI,SAAK,sBAAL;AAA6B;AACzB,eAAO;AACHJ,UAAAA,SAAS,EAAEH,KAAK,CAACQ,OAAN,CAAcL,SAAd,CAAwBM,MAAxB,CAA+BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYV,MAAM,CAACW,OAAP,CAAeD,EAAnE,CADR;AAEHP,UAAAA,QAAQ,EAAEJ,KAAK,CAACQ,OAAN,CAAcJ,QAAd,CAAuBK,MAAvB,CAA8BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYV,MAAM,CAACW,OAAP,CAAeD,EAAlE,CAFP;AAGHN,UAAAA,OAAO,EAAEL,KAAK,CAACQ,OAAN,CAAcH,OAAd,CAAsBI,MAAtB,CAA6BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYV,MAAM,CAACW,OAAP,CAAeD,EAAjE,CAHN;AAIHL,UAAAA,OAAO,EAAEN,KAAK,CAACQ,OAAN,CAAcF,OAAd,CAAsBG,MAAtB,CAA6BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYV,MAAM,CAACW,OAAP,CAAeD,EAAjE;AAJN,SAAP;AAMH;;AAED,SAAK,0BAAL;AAAiC;AAC7B,eAAO,EACH,GAAGX,KAAK,CAACQ,OADN;AAEHL,UAAAA,SAAS,EAAE,CAAC,GAAGH,KAAK,CAACQ,OAAN,CAAcL,SAAlB,EAA6BF,MAAM,CAACW,OAApC;AAFR,SAAP;AAIH;;AAED,SAAK,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGZ,KAAK,CAACQ,OADN;AAEHJ,UAAAA,QAAQ,EAAE,CAAC,GAAGJ,KAAK,CAACQ,OAAN,CAAcJ,QAAlB,EAA4BH,MAAM,CAACW,OAAnC;AAFP,SAAP;AAIH;;AAED,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGZ,KAAK,CAACQ,OADN;AAEHH,UAAAA,OAAO,EAAE,CAAC,GAAGL,KAAK,CAACQ,OAAN,CAAcH,OAAlB,EAA2BJ,MAAM,CAACW,OAAlC;AAFN,SAAP;AAIH;;AAED,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGZ,KAAK,CAACQ,OADN;AAEHF,UAAAA,OAAO,EAAE,CAAC,GAAGN,KAAK,CAACQ,OAAN,CAAcF,OAAlB,EAA2BL,MAAM,CAACW,OAAlC;AAFN,SAAP;AAIH;;AAED;AACI,aAAOZ,KAAK,CAACQ,OAAb;AAvCR;AAyCH,CAlDD;;AAoDA,eAAeT,aAAf","sourcesContent":["const updateMyLists = (state, action) => {\n    if (state === undefined) {\n        return {\n            scheduled: [],\n            watching: [],\n            watched: [],\n            dropped: []\n        };\n    }\n    switch (action.type) {\n        case 'REMOVE_FROM_MY_LISTS': {\n            return {\n                scheduled: state.myLists.scheduled.filter(anime => anime.id != action.payload.id),\n                watching: state.myLists.watching.filter(anime => anime.id != action.payload.id),\n                watched: state.myLists.watched.filter(anime => anime.id != action.payload.id),\n                dropped: state.myLists.dropped.filter(anime => anime.id != action.payload.id)\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_SCHEDULED': {\n            return {\n                ...state.myLists,\n                scheduled: [...state.myLists.scheduled, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_WATCHING': {\n            return {\n                ...state.myLists,\n                watching: [...state.myLists.watching, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_WATCHED': {\n            return {\n                ...state.myLists,\n                watched: [...state.myLists.watched, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_DROPPED': {\n            return {\n                ...state.myLists,\n                dropped: [...state.myLists.dropped, action.payload]\n            }\n        }\n\n        default:\n            return state.myLists;\n    }\n}\n\nexport default updateMyLists;"]},"metadata":{},"sourceType":"module"}