{"ast":null,"code":"const updateMyLists = (state, action) => {\n  if (state === undefined) {\n    return {\n      animes: []\n    };\n  }\n\n  switch (action.type) {\n    case 'REMOVE_FROM_MY_LISTS':\n      {\n        return {\n          scheduled: state.myLists.scheduled.filter(anime => anime.id != action.payload.id),\n          watching: state.myLists.watching.filter(anime => anime.id != action.payload.id),\n          watched: state.myLists.watched.filter(anime => anime.id != action.payload.id),\n          dropped: state.myLists.dropped.filter(anime => anime.id != action.payload.id)\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_SCHEDULED':\n      {\n        return { ...state.myLists,\n          scheduled: [...state.myLists.scheduled, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_WATCHING':\n      {\n        return { ...state.myLists,\n          watching: [...state.myLists.watching, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_WATCHED':\n      {\n        return { ...state.myLists,\n          watched: [...state.myLists.watched, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_DROPPED':\n      {\n        return { ...state.myLists,\n          dropped: [...state.myLists.dropped, action.payload]\n        };\n      }\n\n    default:\n      return state.myLists;\n  }\n};\n\nexport default updateMyLists;","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/reducers/my-lists.js"],"names":["updateMyLists","state","action","undefined","animes","type","scheduled","myLists","filter","anime","id","payload","watching","watched","dropped"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAID,KAAK,KAAKE,SAAd,EAAyB;AACrB,WAAO;AACHC,MAAAA,MAAM,EAAE;AADL,KAAP;AAGH;;AACD,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,sBAAL;AAA6B;AACzB,eAAO;AACHC,UAAAA,SAAS,EAAEL,KAAK,CAACM,OAAN,CAAcD,SAAd,CAAwBE,MAAxB,CAA+BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYR,MAAM,CAACS,OAAP,CAAeD,EAAnE,CADR;AAEHE,UAAAA,QAAQ,EAAEX,KAAK,CAACM,OAAN,CAAcK,QAAd,CAAuBJ,MAAvB,CAA8BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYR,MAAM,CAACS,OAAP,CAAeD,EAAlE,CAFP;AAGHG,UAAAA,OAAO,EAAEZ,KAAK,CAACM,OAAN,CAAcM,OAAd,CAAsBL,MAAtB,CAA6BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYR,MAAM,CAACS,OAAP,CAAeD,EAAjE,CAHN;AAIHI,UAAAA,OAAO,EAAEb,KAAK,CAACM,OAAN,CAAcO,OAAd,CAAsBN,MAAtB,CAA6BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYR,MAAM,CAACS,OAAP,CAAeD,EAAjE;AAJN,SAAP;AAMH;;AAED,SAAK,0BAAL;AAAiC;AAC7B,eAAO,EACH,GAAGT,KAAK,CAACM,OADN;AAEHD,UAAAA,SAAS,EAAE,CAAC,GAAGL,KAAK,CAACM,OAAN,CAAcD,SAAlB,EAA6BJ,MAAM,CAACS,OAApC;AAFR,SAAP;AAIH;;AAED,SAAK,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGV,KAAK,CAACM,OADN;AAEHK,UAAAA,QAAQ,EAAE,CAAC,GAAGX,KAAK,CAACM,OAAN,CAAcK,QAAlB,EAA4BV,MAAM,CAACS,OAAnC;AAFP,SAAP;AAIH;;AAED,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGV,KAAK,CAACM,OADN;AAEHM,UAAAA,OAAO,EAAE,CAAC,GAAGZ,KAAK,CAACM,OAAN,CAAcM,OAAlB,EAA2BX,MAAM,CAACS,OAAlC;AAFN,SAAP;AAIH;;AAED,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGV,KAAK,CAACM,OADN;AAEHO,UAAAA,OAAO,EAAE,CAAC,GAAGb,KAAK,CAACM,OAAN,CAAcO,OAAlB,EAA2BZ,MAAM,CAACS,OAAlC;AAFN,SAAP;AAIH;;AAED;AACI,aAAOV,KAAK,CAACM,OAAb;AAvCR;AAyCH,CA/CD;;AAiDA,eAAeP,aAAf","sourcesContent":["const updateMyLists = (state, action) => {\n    if (state === undefined) {\n        return {\n            animes: []\n        };\n    }\n    switch (action.type) {\n        case 'REMOVE_FROM_MY_LISTS': {\n            return {\n                scheduled: state.myLists.scheduled.filter(anime => anime.id != action.payload.id),\n                watching: state.myLists.watching.filter(anime => anime.id != action.payload.id),\n                watched: state.myLists.watched.filter(anime => anime.id != action.payload.id),\n                dropped: state.myLists.dropped.filter(anime => anime.id != action.payload.id)\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_SCHEDULED': {\n            return {\n                ...state.myLists,\n                scheduled: [...state.myLists.scheduled, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_WATCHING': {\n            return {\n                ...state.myLists,\n                watching: [...state.myLists.watching, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_WATCHED': {\n            return {\n                ...state.myLists,\n                watched: [...state.myLists.watched, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_DROPPED': {\n            return {\n                ...state.myLists,\n                dropped: [...state.myLists.dropped, action.payload]\n            }\n        }\n\n        default:\n            return state.myLists;\n    }\n}\n\nexport default updateMyLists;"]},"metadata":{},"sourceType":"module"}