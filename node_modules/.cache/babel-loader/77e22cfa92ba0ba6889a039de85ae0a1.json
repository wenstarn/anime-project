{"ast":null,"code":"const updateMyList = (state, action) => {\n  if (state === undefined) {\n    return {\n      animes: []\n    };\n  }\n\n  switch (action.type) {\n    case 'REMOVE_FROM_MY_LIST':\n      {\n        return {\n          animes: state.myLists.scheduled.filter(anime => anime.id != action.payload.id)\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_SCHEDULED':\n      {\n        return { ...state.myLists,\n          scheduled: [...state.myLists.scheduled, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_WATCHING':\n      {\n        return { ...state.myLists,\n          watching: [...state.myLists.watching, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_WATCHED':\n      {\n        return { ...state.myLists,\n          watched: [...state.myLists.watched, action.payload]\n        };\n      }\n\n    case 'ADD_TO_MY_LIST_DROPPED':\n      {\n        return { ...state.myLists,\n          dropped: [...state.myLists.dropped, action.payload]\n        };\n      }\n\n    default:\n      return state.myLists;\n  }\n};\n\nexport default updateMyLists;","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/reducers/my-list.js"],"names":["updateMyList","state","action","undefined","animes","type","myLists","scheduled","filter","anime","id","payload","watching","watched","dropped","updateMyLists"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACpC,MAAID,KAAK,KAAKE,SAAd,EAAyB;AACrB,WAAO;AACHC,MAAAA,MAAM,EAAE;AADL,KAAP;AAGH;;AACD,UAAQF,MAAM,CAACG,IAAf;AACI,SAAK,qBAAL;AAA4B;AACxB,eAAO;AACHD,UAAAA,MAAM,EAAEH,KAAK,CAACK,OAAN,CAAcC,SAAd,CAAwBC,MAAxB,CAA+BC,KAAK,IAAIA,KAAK,CAACC,EAAN,IAAYR,MAAM,CAACS,OAAP,CAAeD,EAAnE;AADL,SAAP;AAGH;;AAED,SAAK,0BAAL;AAAiC;AAC7B,eAAO,EACH,GAAGT,KAAK,CAACK,OADN;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGN,KAAK,CAACK,OAAN,CAAcC,SAAlB,EAA6BL,MAAM,CAACS,OAApC;AAFR,SAAP;AAIH;;AAED,SAAK,yBAAL;AAAgC;AAC5B,eAAO,EACH,GAAGV,KAAK,CAACK,OADN;AAEHM,UAAAA,QAAQ,EAAE,CAAC,GAAGX,KAAK,CAACK,OAAN,CAAcM,QAAlB,EAA4BV,MAAM,CAACS,OAAnC;AAFP,SAAP;AAIH;;AAED,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGV,KAAK,CAACK,OADN;AAEHO,UAAAA,OAAO,EAAE,CAAC,GAAGZ,KAAK,CAACK,OAAN,CAAcO,OAAlB,EAA2BX,MAAM,CAACS,OAAlC;AAFN,SAAP;AAIH;;AAED,SAAK,wBAAL;AAA+B;AAC3B,eAAO,EACH,GAAGV,KAAK,CAACK,OADN;AAEHQ,UAAAA,OAAO,EAAE,CAAC,GAAGb,KAAK,CAACK,OAAN,CAAcQ,OAAlB,EAA2BZ,MAAM,CAACS,OAAlC;AAFN,SAAP;AAIH;;AAED;AACI,aAAOV,KAAK,CAACK,OAAb;AApCR;AAsCH,CA5CD;;AA8CA,eAAeS,aAAf","sourcesContent":["const updateMyList = (state, action) => {\n    if (state === undefined) {\n        return {\n            animes: []\n        };\n    }\n    switch (action.type) {\n        case 'REMOVE_FROM_MY_LIST': {\n            return {\n                animes: state.myLists.scheduled.filter(anime => anime.id != action.payload.id),\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_SCHEDULED': {\n            return {\n                ...state.myLists,\n                scheduled: [...state.myLists.scheduled, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_WATCHING': {\n            return {\n                ...state.myLists,\n                watching: [...state.myLists.watching, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_WATCHED': {\n            return {\n                ...state.myLists,\n                watched: [...state.myLists.watched, action.payload]\n            }\n        }\n\n        case 'ADD_TO_MY_LIST_DROPPED': {\n            return {\n                ...state.myLists,\n                dropped: [...state.myLists.dropped, action.payload]\n            }\n        }\n\n        default:\n            return state.myLists;\n    }\n}\n\nexport default updateMyLists;"]},"metadata":{},"sourceType":"module"}