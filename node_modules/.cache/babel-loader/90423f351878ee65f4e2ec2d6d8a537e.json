{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport './anime-details.css';\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeDetails = ({\n  anime,\n  removeAnime,\n  addAnime,\n  myList,\n  episodesRef,\n  gradeRef\n}) => {\n  _s();\n\n  const animeListItem = myList.find(animeListItem => animeListItem.id === anime.id);\n  const [category, setCategory] = useState(\"No category\");\n  const [episodes, setEpisodes] = useState(0);\n  const [grade, setGrade] = useState(0);\n  useEffect(() => {\n    if (animeListItem) {\n      setCategory(animeListItem.category);\n      setEpisodes(animeListItem.episodes);\n      setGrade(animeListItem.grade);\n    }\n\n    if (category === \"No category\") {\n      episodesRef.current.style.visibility = \"hidden\";\n      gradeRef.current.style.visibility = \"hidden\";\n      episodesRef.current.style.position = \"absolute\";\n      gradeRef.current.style.position = \"absolute\";\n    } else {\n      episodesRef.current.style.visibility = \"visible\";\n      gradeRef.current.style.visibility = \"visible\";\n      episodesRef.current.style.position = \"static\";\n      gradeRef.current.style.position = \"static\";\n    }\n\n    if (category === \"Watched\") {\n      episodesRef.current.children[1].children[0].style.visibility = \"hidden\";\n      episodesRef.current.children[1].children[1].style.visibility = \"hidden\";\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-5 text-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-xl-2 col-lg-3 col-md-4 d-flex flex-column justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: anime.image,\n          className: \"img-fluid rounded mb-3 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: category,\n          onChange: selectCategory(setCategory, {\n            category,\n            episodes,\n            grade\n          }, {\n            removeAnime,\n            addAnime,\n            anime\n          }),\n          class: \"custom-select mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"No category\",\n            children: \"\\u041D\\u0435\\u0442 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Scheduled\",\n            children: \"\\u0417\\u0430\\u043F\\u043B\\u0430\\u043D\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Watching\",\n            children: \"\\u0421\\u043C\\u043E\\u0442\\u0440\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Watched\",\n            children: \"\\u041F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0435\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Dropped\",\n            children: \"\\u0411\\u0440\\u043E\\u0448\\u0435\\u043D\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: episodesRef,\n          className: \"mb-3 d-flex justify-content-between align-items-center\",\n          style: {\n            visibility: \"hidden\",\n            position: \"absolute\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"\",\n            children: [\"\\u042D\\u043F\\u0438\\u0437\\u043E\\u0434\\u044B: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: episodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 53\n            }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 77\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"btn-group\",\n            role: \"group\",\n            \"aria-label\": \"Basic mixed styles example\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: pushButton(setEpisodes, episodes, -1, {\n                category,\n                episodes,\n                grade\n              }, {\n                removeAnime,\n                addAnime,\n                anime\n              }),\n              class: \"btn btn-danger\",\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: pushButton(setEpisodes, episodes, 1, {\n                category,\n                episodes,\n                grade\n              }, {\n                removeAnime,\n                addAnime,\n                anime\n              }),\n              class: \"btn btn-success\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: gradeRef,\n          className: \"mb-3 d-flex justify-content-center align-items-baseline\",\n          style: {\n            visibility: \"hidden\",\n            position: \"absolute\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"col-5 p-0\",\n            style: {\n              display: \"inline-block\"\n            },\n            children: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-text bg-warning\",\n              id: \"basic-addon1\",\n              children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"16\",\n                height: \"16\",\n                fill: \"currentColor\",\n                class: \"bi bi-star\",\n                viewBox: \"0 0 16 16\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 93\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: grade,\n              className: \"form-control\",\n              placeholder: \"\\u041E\\u0446\\u0435\\u043D\\u043A\\u0430\",\n              \"aria-label\": \"Grade\",\n              \"aria-describedby\": \"basic-addon1\",\n              max: \"10\",\n              min: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"\",\n          children: anime.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-3\",\n            children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: anime.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-3\",\n            children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u044D\\u043F\\u0438\\u0437\\u043E\\u0434\\u043E\\u0432:  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-3\",\n            children: [\"\\u0416\\u0430\\u043D\\u0440\\u044B: \", anime.genres.map((genre, index) => {\n              if (index !== anime.genres.length - 1) {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-secondary\",\n                  children: [\" \", genre.russian, \",\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 37\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"text-secondary\",\n                  children: [\" \", genre.russian]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this);\n              }\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"mb-3\",\n            children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: anime.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AnimeDetails, \"VlsinK/Gx8Dm7jruigJny0YQT4Y=\");\n\n_c = AnimeDetails;\n\nconst selectCategory = (setCategory, state, animeServ) => event => {\n  let {\n    category,\n    episodes,\n    grade\n  } = state;\n  const {\n    removeAnime,\n    addAnime,\n    anime\n  } = animeServ;\n  const episodesLimit = anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes;\n  removeAnime(anime);\n\n  if (event.target.value !== \"No category\") {\n    if (event.target.value === \"Watched\") episodes = episodesLimit;\n    const animeItem = {\n      id: anime.id,\n      name: anime.name,\n      episodes,\n      grade,\n      category: event.target.value\n    };\n    addAnime(animeItem);\n    setCategory(event.target.value);\n  } //setCategory(episodes)\n\n};\n\nconst pushButton = (setEpisodes, episodes, number, state, animeServ) => event => {\n  const {\n    category,\n    episodes,\n    grade\n  } = state;\n  const {\n    removeAnime,\n    addAnime,\n    anime\n  } = animeServ;\n  let episodesNum = episodes + number;\n  const episodesLimit = anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes;\n  removeAnime(anime);\n  if (episodesNum < 0) episodesNum = 0;\n  if (episodesNum > episodesLimit) episodesNum = episodesLimit;\n  setEpisodes(episodes + number);\n};\n\nclass AnimeDetailsContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.episodes = /*#__PURE__*/React.createRef();\n    this.grade = /*#__PURE__*/React.createRef();\n    this.category = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.animeRequested();\n    this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location != this.props.location) {\n      console.log(\"detail update\");\n      this.props.animeRequested();\n      this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res));\n    }\n  }\n\n  render() {\n    if (Object.keys(this.props.anime).length) {\n      return /*#__PURE__*/_jsxDEV(AnimeDetails, {\n        anime: this.props.anime,\n        episodesRef: this.episodes,\n        gradeRef: this.grade,\n        removeAnime: this.props.removeFromMyList,\n        addAnime: this.props.addToMyList,\n        myList: this.props.animes,\n        category: this.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 20\n      }, this);\n    } else {\n      return \"nnnn\";\n    }\n  }\n\n}\n\nconst mapStatetoProps = ({\n  animeDetails: {\n    anime,\n    loading,\n    error\n  },\n  myList: {\n    animes\n  }\n}) => {\n  return {\n    anime,\n    loading,\n    error,\n    animes\n  };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)));\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeDetails\");","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js"],"names":["React","Component","useEffect","useState","connect","withAnimeService","actions","withRouter","AnimeDetails","anime","removeAnime","addAnime","myList","episodesRef","gradeRef","animeListItem","find","id","category","setCategory","episodes","setEpisodes","grade","setGrade","current","style","visibility","position","children","image","selectCategory","episodes_aired","pushButton","display","name","score","genres","map","genre","index","length","russian","description","state","animeServ","event","episodesLimit","target","value","animeItem","number","episodesNum","AnimeDetailsContainer","constructor","props","createRef","componentDidMount","animeRequested","animeService","getAnime","then","res","animeLoaded","componentDidUpdate","prevProps","location","console","log","render","Object","keys","removeFromMyList","addToMyList","animes","mapStatetoProps","animeDetails","loading","error"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\nimport './anime-details.css'\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\n\n\nconst AnimeDetails = ({ anime, removeAnime, addAnime, myList, episodesRef, gradeRef }) => {\n    const animeListItem = myList.find(animeListItem => animeListItem.id === anime.id);\n    const [category, setCategory] = useState(\"No category\")\n    const [episodes, setEpisodes] = useState(0)\n    const [grade, setGrade] = useState(0)\n    useEffect(() => {\n        if (animeListItem) {\n            setCategory(animeListItem.category);\n            setEpisodes(animeListItem.episodes);\n            setGrade(animeListItem.grade);\n        }\n\n        if (category === \"No category\") {\n            episodesRef.current.style.visibility = \"hidden\"\n            gradeRef.current.style.visibility = \"hidden\"\n            episodesRef.current.style.position = \"absolute\"\n            gradeRef.current.style.position = \"absolute\"\n\n        }\n        else {\n            episodesRef.current.style.visibility = \"visible\"\n            gradeRef.current.style.visibility = \"visible\"\n            episodesRef.current.style.position = \"static\"\n            gradeRef.current.style.position = \"static\"\n        }\n\n        if (category === \"Watched\") {\n            episodesRef.current.children[1].children[0].style.visibility = \"hidden\"\n            episodesRef.current.children[1].children[1].style.visibility = \"hidden\"\n\n        }\n    })\n    return (\n        <div className=\"container-fluid mt-5 text-light\" >\n            <div className=\"row\">\n                <div className=\"col-xl-2 col-lg-3 col-md-4 d-flex flex-column justify-content-center\">\n                    <img src={anime.image} className=\"img-fluid rounded mb-3 \" />\n                    <select value={category} onChange={selectCategory(setCategory, { category, episodes, grade },\n                        { removeAnime, addAnime, anime })} class=\"custom-select mb-3\">\n                        <option value=\"No category\">Нет категории</option>\n                        <option value=\"Scheduled\">Запланированно</option>\n                        <option value=\"Watching\">Смотрю</option>\n                        <option value=\"Watched\">Просмотрено</option>\n                        <option value=\"Dropped\">Брошено</option>\n                    </select>\n                    <div ref={episodesRef} className=\"mb-3 d-flex justify-content-between align-items-center\" style={{ visibility: \"hidden\", position: \"absolute\" }}>\n                        <span className=\"\">Эпизоды: <span>{episodes}</span>/<span>{anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes}</span></span>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\n                            <button type=\"button\" onClick={pushButton(setEpisodes, episodes, -1, { category, episodes, grade },\n                                { removeAnime, addAnime, anime })} class=\"btn btn-danger\">-</button>\n                            <button type=\"button\" onClick={pushButton(setEpisodes, episodes, 1, { category, episodes, grade },\n                                { removeAnime, addAnime, anime })} class=\"btn btn-success\">+</button>\n                        </div>\n                    </div>\n                    <div ref={gradeRef} className=\"mb-3 d-flex justify-content-center align-items-baseline\" style={{ visibility: \"hidden\", position: \"absolute\" }}>\n                        <span className=\"col-5 p-0\" style={{ display: \"inline-block\" }}>Оценка:</span>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text bg-warning\" id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star\" viewBox=\"0 0 16 16\">\n                                <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\n                            </svg></span>\n                            <input type=\"number\" value={grade} className=\"form-control\" placeholder=\"Оценка\" aria-label=\"Grade\" aria-describedby=\"basic-addon1\" max=\"10\" min=\"0\" />\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <h1 className=\"\">{anime.name}</h1>\n                    <ul className=\"p-0\">\n                        <li className=\"mb-3\">Рейтинг: <span className=\"text-secondary\">{anime.score}</span></li>\n                        <li className=\"mb-3\">Количество эпизодов:  <span className=\"text-secondary\">{anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes}</span></li>\n                        <li className=\"mb-3\">Жанры: {anime.genres.map((genre, index) => {\n\n                            if (index !== anime.genres.length - 1) {\n                                return (\n                                    <span className=\"text-secondary\"> {genre.russian},</span>\n                                )\n                            }\n                            else {\n                                return (\n                                    <span className=\"text-secondary\"> {genre.russian}</span>\n                                )\n                            }\n                        }\n                        )}</li>\n                        <li className=\"mb-3\">Описание: <span className=\"text-secondary\">{anime.description}</span></li>\n                    </ul>\n                </div>\n\n            </div>\n        </div >\n\n    )\n}\n\nconst selectCategory = (setCategory, state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    const episodesLimit = anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes;\n    removeAnime(anime)\n\n    if (event.target.value !== \"No category\") {\n        if (event.target.value === \"Watched\") episodes = episodesLimit;\n        const animeItem = { id: anime.id, name: anime.name, episodes, grade, category: event.target.value }\n        addAnime(animeItem)\n        setCategory(event.target.value)\n    }\n    //setCategory(episodes)\n}\n\nconst pushButton = (setEpisodes, episodes, number, state, animeServ) => (event) => {\n    const { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    let episodesNum = episodes + number;\n    const episodesLimit = anime.episodes_aired > 0 ? anime.episodes_aired : anime.episodes;\n    removeAnime(anime)\n    if (episodesNum < 0) episodesNum = 0\n    if (episodesNum > episodesLimit) episodesNum = episodesLimit\n    setEpisodes(episodes + number);\n}\nclass AnimeDetailsContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.episodes = React.createRef();\n        this.grade = React.createRef();\n        this.category = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.props.animeRequested()\n        this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location != this.props.location) {\n            console.log(\"detail update\")\n\n            this.props.animeRequested()\n            this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n        }\n\n    }\n\n    render() {\n        if (Object.keys(this.props.anime).length) {\n            return <AnimeDetails anime={this.props.anime} episodesRef={this.episodes}\n                gradeRef={this.grade} removeAnime={this.props.removeFromMyList} addAnime={this.props.addToMyList}\n                myList={this.props.animes} category={this.category} />\n        }\n        else {\n            return \"nnnn\"\n        }\n    }\n}\n\n\n\nconst mapStatetoProps = ({ animeDetails: { anime, loading, error }, myList: { animes } }) => {\n    return { anime, loading, error, animes };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)))\n"]},"metadata":{},"sourceType":"module"}