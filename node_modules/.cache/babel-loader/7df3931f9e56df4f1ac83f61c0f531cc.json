{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js\";\nimport React, { Component } from \"react\";\nimport './anime-details.css';\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeDetails = ({\n  anime\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid mt-5 text-light\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: anime.image,\n          className: \"img-fluid rounded-start p-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: anime.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"p-0\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u0420\\u0435\\u0439\\u0442\\u0438\\u043D\\u0433: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: anime.score\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 38\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u044D\\u043F\\u0438\\u0437\\u043E\\u0434\\u043E\\u0432:  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: anime.episodes_aired\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 51\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-secondary\",\n              children: anime.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AnimeDetails;\n\nclass AnimeDetailsContainer extends Component {\n  componentDidMount() {\n    console.log(\"detail mount\");\n    this.props.animeRequested();\n    this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location != this.props.location) {\n      console.log(\"detail update\");\n      this.props.animeRequested();\n      this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res));\n    }\n  }\n\n  render() {\n    if (this.props.anime) {\n      return /*#__PURE__*/_jsxDEV(AnimeDetails, {\n        anime: this.props.anime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nconst mapStatetoProps = ({\n  animeDetails: {\n    anime,\n    loading,\n    error\n  }\n}) => {\n  return {\n    anime,\n    loading,\n    error\n  };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)));\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeDetails\");","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js"],"names":["React","Component","connect","withAnimeService","actions","withRouter","AnimeDetails","anime","image","name","score","episodes_aired","description","AnimeDetailsContainer","componentDidMount","console","log","props","animeRequested","animeService","getAnime","id","then","res","animeLoaded","componentDidUpdate","prevProps","location","render","mapStatetoProps","animeDetails","loading","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport './anime-details.css'\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\n\nconst AnimeDetails = ({ anime }) => {\n\n    return (\n        <div className=\"container-fluid mt-5 text-light\" >\n            <div className=\"row\">\n\n                <div className=\"col-2\">\n                    <img src={anime.image} className=\"img-fluid rounded-start p-3\" />\n                </div>\n                <div className=\"col\">\n                    <h1>{anime.name}</h1>\n                    <ul className=\"p-0\">\n                        <li>Рейтинг: <span className=\"text-secondary\">{anime.score}</span></li>\n                        <li>Количество эпизодов:  <span className=\"text-secondary\">{anime.episodes_aired}</span></li>\n                        <li>Описание: <span className=\"text-secondary\">{anime.description}</span></li>\n                    </ul>\n                </div>\n\n            </div>\n        </div >\n\n\n    )\n}\n\nclass AnimeDetailsContainer extends Component {\n    componentDidMount() {\n        console.log(\"detail mount\")\n        this.props.animeRequested()\n        this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location != this.props.location) {\n            console.log(\"detail update\")\n\n            this.props.animeRequested()\n            this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n        }\n    }\n\n    render() {\n        if (this.props.anime) {\n            return <AnimeDetails anime={this.props.anime} />\n        }\n    }\n}\n\nconst mapStatetoProps = ({ animeDetails: { anime, loading, error } }) => {\n    return { anime, loading, error };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)))\n"]},"metadata":{},"sourceType":"module"}