{"ast":null,"code":"import _objectSpread from\"/Users/aleksandrgolomazov/anime-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/aleksandrgolomazov/anime-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from\"react\";import{Link}from\"react-router-dom\";import\"./my-list-item.css\";import{addToMyList,removeFromMyList}from\"../../actions\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MyListItem=function MyListItem(_ref){var anime=_ref.anime,addToMyList=_ref.addToMyList,removeFromMyList=_ref.removeFromMyList;var _useState=useState(anime.grade),_useState2=_slicedToArray(_useState,2),grade=_useState2[0],setGrade=_useState2[1];var _useState3=useState(anime.episodes),_useState4=_slicedToArray(_useState3,2),episodes=_useState4[0],setEpisodes=_useState4[1];return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"td\",{className:\"name\",children:/*#__PURE__*/_jsx(Link,{to:\"/animes/\".concat(anime.id),children:anime.name})}),/*#__PURE__*/_jsx(\"td\",{className:\"episodes\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsx(\"input\",{className:\"my-list-item-stats\",type:\"text\",value:episodes,onBlur:changeEpisodes(anime,episodes,addToMyList,removeFromMyList),onChange:handleEpisodesChange(setEpisodes,anime.episodesLimit)})})}),/*#__PURE__*/_jsx(\"td\",{className:\"grade\",children:/*#__PURE__*/_jsx(\"div\",{className:\"content-wrapper\",children:/*#__PURE__*/_jsx(\"input\",{className:\"my-list-item-stats\",onBlur:changeGrade(anime,grade,addToMyList,removeFromMyList),type:\"text\",onChange:handeGradeChange(setGrade),value:grade})})})]});};var handleEpisodesChange=function handleEpisodesChange(setEpisodes,limit){return function(event){var value=parseInt(event.target.value.replace(/\\D/,''));if(event.target.value=='')value=0;if(value<=limit&&value>=0){setEpisodes(value);}};};var changeEpisodes=function changeEpisodes(anime,episodes,addToMyList,removeFromMyList){return function(){removeFromMyList(anime);var newItem=_objectSpread(_objectSpread({},anime),{},{episodes:episodes});addToMyList(newItem);};};var handeGradeChange=function handeGradeChange(setGrade){return function(event){var value=parseInt(event.target.value.replace(/\\D/,''));if(event.target.value=='')value=0;if(value<=10&&value>=0){setGrade(value);}};};var changeGrade=function changeGrade(anime,grade,addToMyList,removeFromMyList){return function(){console.log(anime);removeFromMyList(anime);var newItem=_objectSpread(_objectSpread({},anime),{},{grade:grade});addToMyList(newItem);};};var actions={addToMyList:addToMyList,removeFromMyList:removeFromMyList};export default connect(null,actions)(MyListItem);","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime-project/src/components/my-list-item/my-list-item.js"],"names":["React","Fragment","useState","Link","addToMyList","removeFromMyList","connect","MyListItem","anime","grade","setGrade","episodes","setEpisodes","id","name","changeEpisodes","handleEpisodesChange","episodesLimit","changeGrade","handeGradeChange","limit","event","value","parseInt","target","replace","newItem","console","log","actions"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./my-list-item.css\"\nimport { addToMyList, removeFromMyList } from \"../../actions\"\nimport { connect } from \"react-redux\";\n\n\n\nconst MyListItem = ({ anime, addToMyList, removeFromMyList }) => {\n    const [grade, setGrade] = useState(anime.grade);\n    const [episodes, setEpisodes] = useState(anime.episodes);\n    return (\n        <Fragment>\n            <td className=\"name\">\n                <Link to={`/animes/${anime.id}`}>{anime.name}</Link>\n            </td>\n            <td className=\"episodes\">\n                <div className=\"content-wrapper\">\n                    <input className=\"my-list-item-stats\" type=\"text\" value={episodes} onBlur={changeEpisodes(anime, episodes, addToMyList, removeFromMyList)}\n                        onChange={handleEpisodesChange(setEpisodes, anime.episodesLimit)} />\n                </div>\n            </td>\n            <td className=\"grade\">\n                <div className=\"content-wrapper\">\n                    <input className=\"my-list-item-stats\" onBlur={changeGrade(anime, grade, addToMyList, removeFromMyList)} type=\"text\"\n                        onChange={handeGradeChange(setGrade)} value={grade} />\n                </div>\n            </td>\n        </Fragment>\n    )\n}\n\nconst handleEpisodesChange = (setEpisodes, limit) => (event) => {\n    let value = parseInt(event.target.value.replace(/\\D/, ''))\n    if (event.target.value == '') value = 0;\n    if (value <= limit && value >= 0) {\n        setEpisodes(value)\n    }\n}\n\nconst changeEpisodes = (anime, episodes, addToMyList, removeFromMyList) => () => {\n    removeFromMyList(anime)\n    const newItem = { ...anime, episodes }\n    addToMyList(newItem);\n}\nconst handeGradeChange = (setGrade) => (event) => {\n    let value = parseInt(event.target.value.replace(/\\D/, ''))\n    if (event.target.value == '') value = 0;\n    if (value <= 10 && value >= 0) {\n        setGrade(value)\n    }\n\n}\nconst changeGrade = (anime, grade, addToMyList, removeFromMyList) => () => {\n    console.log(anime)\n    removeFromMyList(anime)\n    const newItem = { ...anime, grade }\n    addToMyList(newItem);\n}\n\nconst actions = { addToMyList, removeFromMyList }\nexport default connect(null, actions)(MyListItem);"]},"metadata":{},"sourceType":"module"}