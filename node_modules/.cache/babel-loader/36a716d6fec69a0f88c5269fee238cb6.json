{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js\";\nimport React, { Component } from \"react\";\nimport './anime-details.css';\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions';\nimport { withRouter } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeDetails = ({\n  anime\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-3\",\n    style: \"max-width: 540px;\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row g-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: anime.image,\n          className: \"img-fluid rounded-start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: anime.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: anime.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-muted\",\n              children: \"Last updated 3 mins ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = AnimeDetails;\n\nclass AnimeDetailsContainer extends Component {\n  componentDidMount() {\n    this.props.animeRequested();\n    this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.location != this.props.location) {\n      this.props.animeRequested();\n      this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(AnimeDetails, {\n      anime: this.props.anime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nconst mapStatetoProps = ({\n  animeDetails: {\n    anime,\n    loading,\n    error\n  }\n}) => {\n  return {\n    anime,\n    loading,\n    error\n  };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)));\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeDetails\");","map":{"version":3,"sources":["/Users/aleksandrgolomazov/anime_project/src/components/anime-details/anime-details.js"],"names":["React","Component","connect","withAnimeService","actions","withRouter","AnimeDetails","anime","image","name","description","AnimeDetailsContainer","componentDidMount","props","animeRequested","animeService","getAnime","id","then","res","animeLoaded","componentDidUpdate","prevProps","location","render","mapStatetoProps","animeDetails","loading","error"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,gBAAP,MAA6B,QAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAChC,sBAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,KAAK,EAAC,mBAAjC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAEA,KAAK,CAACC,KAAhB;AAAuB,UAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,YAAd;AAAA,sBAA4BD,KAAK,CAACE;AAAlC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,sBAA0BF,KAAK,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAG,YAAA,SAAS,EAAC,WAAb;AAAA,mCAAyB;AAAO,cAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAHJ;AAkBH,CAnBD;;KAAMJ,Y;;AAqBN,MAAMK,qBAAN,SAAoCV,SAApC,CAA8C;AAC1CW,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,cAAX;AACA,SAAKD,KAAL,CAAWE,YAAX,CAAwBC,QAAxB,CAAiC,KAAKH,KAAL,CAAWI,EAA5C,EAAgDC,IAAhD,CAAqDC,GAAG,IAAI,KAAKN,KAAL,CAAWO,WAAX,CAAuBD,GAAvB,CAA5D;AACH;;AAEDE,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAIA,SAAS,CAACC,QAAV,IAAsB,KAAKV,KAAL,CAAWU,QAArC,EAA+C;AAC3C,WAAKV,KAAL,CAAWC,cAAX;AACA,WAAKD,KAAL,CAAWE,YAAX,CAAwBC,QAAxB,CAAiC,KAAKH,KAAL,CAAWI,EAA5C,EAAgDC,IAAhD,CAAqDC,GAAG,IAAI,KAAKN,KAAL,CAAWO,WAAX,CAAuBD,GAAvB,CAA5D;AACH;AACJ;;AAEDK,EAAAA,MAAM,GAAG;AACL,wBAAO,QAAC,YAAD;AAAc,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWN;AAAhC;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAfyC;;AAkB9C,MAAMkB,eAAe,GAAG,CAAC;AAAEC,EAAAA,YAAY,EAAE;AAAEnB,IAAAA,KAAF;AAASoB,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB;AAAhB,CAAD,KAAiD;AACrE,SAAO;AAAErB,IAAAA,KAAF;AAASoB,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAP;AACH,CAFD;;AAIA,eAAevB,UAAU,CAACF,gBAAgB,GAAGD,OAAO,CAACuB,eAAD,EAAkBrB,OAAlB,CAAP,CAAkCO,qBAAlC,CAAH,CAAjB,CAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport './anime-details.css'\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\n\nconst AnimeDetails = ({ anime }) => {\n    return (\n\n\n        <div className=\"card mb-3\" style=\"max-width: 540px;\">\n            <div className=\"row g-0\">\n                <div className=\"col-md-4\">\n                    <img src={anime.image} className=\"img-fluid rounded-start\" />\n                </div>\n                <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{anime.name}</h5>\n                        <p className=\"card-text\">{anime.description}</p>\n                        <p className=\"card-text\"><small className=\"text-muted\">Last updated 3 mins ago</small></p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nclass AnimeDetailsContainer extends Component {\n    componentDidMount() {\n        this.props.animeRequested()\n        this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location != this.props.location) {\n            this.props.animeRequested()\n            this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n        }\n    }\n\n    render() {\n        return <AnimeDetails anime={this.props.anime} />\n    }\n}\n\nconst mapStatetoProps = ({ animeDetails: { anime, loading, error } }) => {\n    return { anime, loading, error };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)))\n"]},"metadata":{},"sourceType":"module"}