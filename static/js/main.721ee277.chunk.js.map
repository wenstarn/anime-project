{"version":3,"sources":["components/anime-service-context/anime-service-context.js","components/hoc/index.js","components/hoc/with-anime-service.js","actions/index.js","reducers/anime-details.js","reducers/anime-list.js","reducers/anime-search-list.js","reducers/my-list.js","reducers/index.js","store.js","components/anime-header/anime-header.js","components/anime-header/index.js","components/anime-list-item/anime-list-item.js","components/anime-list-item/index.js","components/anime-list/anime-list.js","components/anime-list/index.js","components/anime-details/anime-details.js","components/anime-details/index.js","components/anime-search-list-item/index.js","components/anime-search-list-item/anime-search-list-item.js","components/anime-search-list/anime-search-list.js","components/anime-search-list/index.js","components/my-list-item/my-list-item.js","components/my-list-item/index.js","components/my-list/my-list.js","components/my-list/index.js","components/app/index.js","components/app/app.js","index.js","services/anime-service.js"],"names":["React","createContext","AnimeServiceProvider","Provider","AnimeServiceConsumer","Consumer","withAnimeService","Wrapped","props","animeService","animeListRequested","type","animeListLoaded","ongoings","payload","animeRequested","animeLoaded","anime","animeSearchListRequested","animeSearchListLoaded","animes","animeSearchListClear","animeListAnimesRequested","animeListAnimesLoaded","makeListVisible","makeListInvisible","console","log","typeAnimeSearch","search","removeFromMyList","addToMyList","updateAnimeDetails","state","action","undefined","loading","error","animeDetails","updateAnimeList","page","animeList","updateAnimeSearchList","visibility","animeSearchList","updateMyList","myList","filter","id","reducer","store","createStore","pushSearchButton","history","event","value","document","querySelector","children","push","searchAnimes","request","clearing","visible","target","length","then","res","searchClick","form","nav","searchList","style","width","window","getComputedStyle","getPropertyValue","top","right","shift","addEventListener","toggle","dispatch","actions","AnimeHeader","withRouter","connect","className","href","onClick","to","class","zIndex","placeholder","onInput","name","changeItemSize","img","nativeEvent","path","height","AnimeListItem","title","image","url","onMouseOver","onMouseOut","src","alt","AnimeList","map","AnimeListContainer","scroll","contentHeight","offsetHeight","pageYOffset","innerHeight","getAdditionalOngoings","this","searchCheck","prevProps","location","qs","ignoreQueryPrefix","removeEventListener","getOngoings","Component","AnimeDetails","removeAnime","addAnime","episodesRef","gradeRef","animeListItem","find","useState","category","setCategory","episodes","setEpisodes","grade","setGrade","useEffect","current","position","onChange","selectCategory","ref","episodes_aired","role","pushButton","display","xmlns","fill","viewBox","d","addGrade","max","min","score","genres","genre","index","russian","description","animeServ","episodesLimit","number","episodesNum","AnimeDetailsContainer","createRef","getAnime","Object","keys","AnimeSearchListItem","AnimeSearchList","color","imageForSearch","handleEpisodesChange","limit","parseInt","replace","changeEpisodes","newItem","handeGradeChange","changeGrade","MyListItem","onBlur","Table","scope","MyList","scheduled","watching","watched","dropped","App","minHeight","render","exact","component","match","params","_apiBase","getResource","a","config","axios","get","data","num","status","order","_transformAnime","getRandomCharacters","idArray","characters","i","Math","floor","random","_transformCharacter","original","x48","character","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.721ee277.chunk.js","sourcesContent":["import React from \"react\";\n\nconst {\n    Provider: AnimeServiceProvider,\n    Consumer: AnimeServiceConsumer\n} = React.createContext();\n\nexport {\n    AnimeServiceProvider,\n    AnimeServiceConsumer\n};","import withAnimeService from \"./with-anime-service\";\n\nexport default withAnimeService;","import React from \"react\";\nimport { AnimeServiceConsumer, AnimeServiceProvider } from \"../anime-service-context\";\n\nconst withAnimeService = () => (Wrapped) => {\n\n    return (props) => {\n        return (\n            <AnimeServiceConsumer>\n                {\n                    (animeService) => {\n                        return (<Wrapped {...props}\n                            animeService={animeService} />);\n                    }\n                }\n            </AnimeServiceConsumer>\n        )\n    }\n}\n\nexport default withAnimeService;","export const animeListRequested = () => {\n    return {\n        type: 'FETCH_ANIME_LIST_REQUEST'\n    };\n};\n\nexport const animeListLoaded = (ongoings) => {\n    return {\n        type: 'FETCH_ANIME_LIST_SUCCESS',\n        payload: ongoings\n    };\n};\n\nexport const animeRequested = () => {\n    return {\n        type: 'FETCH_ANIME_REQUEST'\n    };\n};\n\nexport const animeLoaded = (anime) => {\n    return {\n        type: 'FETCH_ANIME_SUCCESS',\n        payload: anime\n    };\n};\n\nexport const animeSearchListRequested = () => {\n    return {\n        type: 'FETCH_ANIME_SEARCH_LIST_REQUEST'\n    };\n};\n\nexport const animeSearchListLoaded = (animes) => {\n    return {\n        type: 'FETCH_ANIME_SEARCH_LIST_SUCCESS',\n        payload: animes\n    };\n};\n\nexport const animeSearchListClear = () => {\n    return {\n        type: 'CLEAR_ANIME_SEARCH_LIST'\n    };\n}\n\nexport const animeListAnimesRequested = () => {\n    return {\n        type: 'UPLOAD_ANIMES_TO_ANIME_LIST_REQUEST',\n    };\n};\n\nexport const animeListAnimesLoaded = (animes) => {\n    return {\n        type: 'UPLOAD_ANIMES_TO_ANIME_LIST_SUCCESS',\n        payload: animes\n    };\n};\n\nexport const makeListVisible = () => {\n    return {\n        type: 'MAKE_LIST_VISIBLE'\n    }\n}\n\nexport const makeListInvisible = () => {\n    console.log(\"invisible\")\n    return {\n\n        type: 'MAKE_LIST_INVISIBLE'\n    }\n}\n\nexport const typeAnimeSearch = (search) => {\n    return {\n        type: 'TYPE_ANIME_SEARCH',\n        payload: search\n    }\n}\n\nexport const removeFromMyList = (anime) => {\n    return {\n        type: 'REMOVE_FROM_MY_LIST',\n        payload: anime\n    }\n}\n\nexport const addToMyList = (anime) => {\n    return {\n        type: 'ADD_TO_MY_LIST',\n        payload: anime\n    }\n}","const updateAnimeDetails = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            anime: {},\n            loading: true,\n            error: null\n        };\n    }\n\n    switch (action.type) {\n        case 'FETCH_ANIME_REQUEST':\n            console.log(\"anime req\")\n\n            return {\n                anime: {},\n                loading: true,\n                error: null\n\n            }\n        case 'FETCH_ANIME_SUCCESS':\n            console.log(\"anime success\")\n            return {\n                anime: action.payload,\n                loading: false,\n                error: null\n            }\n        case 'FETCH_ANIME_FAILURE':\n            return {\n                anime: {},\n                loading: false,\n                error: action.payload\n            };\n\n        default:\n            return state.animeDetails;\n    }\n}\n\nexport default updateAnimeDetails;","const updateAnimeList = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            animes: [],\n            loading: true,\n            error: null,\n            page: 1\n        };\n    }\n    switch (action.type) {\n        case 'FETCH_ANIME_LIST_REQUEST':\n            return {\n                animes: [],\n                loading: true,\n                error: null,\n                page: 1\n            }\n        case 'FETCH_ANIME_LIST_SUCCESS':\n            return {\n                animes: action.payload,\n                loading: false,\n                error: null,\n                page: 1\n            }\n        case 'FETCH_ANIME_LIST_FAILURE':\n            return {\n                animes: [],\n                loading: false,\n                error: action.payload,\n                page: 1\n            };\n        case 'UPLOAD_ANIMES_TO_ANIME_LIST_REQUEST':\n            return {\n                animes: [...state.animeList.animes],\n                loading: true,\n                error: null,\n                page: state.animeList.page + 1\n            }\n        case 'UPLOAD_ANIMES_TO_ANIME_LIST_SUCCESS':\n            return {\n                animes: [...state.animeList.animes, ...action.payload],\n                loading: false,\n                error: null,\n                page: state.animeList.page\n            }\n        default:\n            return state.animeList;\n    }\n}\n\nexport default updateAnimeList;","const updateAnimeSearchList = (state, action) => {\n\n    if (state === undefined) {\n        return {\n            visibility: 'hidden',\n            animes: [],\n            loading: true,\n            error: null\n        };\n    }\n    switch (action.type) {\n        case 'FETCH_ANIME_SEARCH_LIST_REQUEST':\n            return {\n                ...state.animeSearchList,\n                animes: [],\n                loading: true,\n                error: null,\n            }\n\n        case 'FETCH_ANIME_SEARCH_LIST_SUCCESS':\n            return {\n                ...state.animeSearchList,\n                animes: action.payload,\n                loading: false,\n                error: null,\n            }\n        case 'FETCH_ANIME_SEARCH_LIST_FAILURE':\n            return {\n                ...state.animeSearchList,\n                animes: [],\n                loading: false,\n                error: action.payload\n            }\n        case 'CLEAR_ANIME_SEARCH_LIST':\n            return {\n                ...state.animeSearchList,\n                animes: [],\n                loading: false,\n                error: null,\n            }\n\n        case 'MAKE_LIST_VISIBLE':\n            return {\n                ...state.animeSearchList,\n                visibility: 'visible'\n            }\n        case 'MAKE_LIST_INVISIBLE':\n            console.log(\"hidden\")\n            return {\n                ...state.animeSearchList,\n                visibility: 'hidden'\n            }\n        default:\n            return state.animeSearchList;\n    }\n}\n\nexport default updateAnimeSearchList;","const updateMyList = (state, action) => {\n    if (state === undefined) {\n        return {\n            animes: []\n        };\n    }\n    switch (action.type) {\n        case 'REMOVE_FROM_MY_LIST': {\n            return {\n                animes: state.myList.animes.filter(anime => anime.id != action.payload.id),\n            }\n        }\n        case 'ADD_TO_MY_LIST': {\n            return {\n                animes: [...state.myList.animes, action.payload]\n            }\n        }\n        default:\n            return state.myList;\n    }\n}\n\nexport default updateMyList;","import updateAnimeDetails from \"./anime-details\";\nimport updateAnimeList from \"./anime-list\";\nimport updateAnimeSearchList from \"./anime-search-list\";\nimport updateMyList from \"./my-list\";\n\nconst reducer = (state, action) => {\n    return {\n        animeList: updateAnimeList(state, action),\n        animeDetails: updateAnimeDetails(state, action),\n        animeSearchList: updateAnimeSearchList(state, action),\n        myList: updateMyList(state, action)\n    }\n}\n\nexport default reducer;","import { createStore } from \"redux\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer)\nexport default store;","import React, { Component } from \"react\";\nimport './anime-header.css'\nimport withAnimeService from \"../hoc\";\nimport { connect } from \"react-redux\";\nimport {\n    animeSearchListRequested, animeSearchListLoaded, animeSearchListClear,\n    makeListVisible, makeListInvisible\n} from '../../actions'\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router\";\nimport store from \"../../store\";\n\n\nconst AnimeHeader = ({ animeService, animeSearchListRequested, animeSearchListLoaded,\n    animeSearchListClear, makeListVisible, history, makeListInvisible }) => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark  sticky-top\">\n            <a className=\"navbar-brand\" href=\"#\">Anime</a>\n            <button onClick={() => makeListInvisible()} className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/animes\">Ongoings<span class=\"sr-only\">(current)</span></Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link\" to=\"/myList\">My list</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link className=\"nav-link disabled\" href=\"#\">Games</Link>\n                    </li>\n                </ul>\n                <form className=\"search-form form-inline my-2 my-lg-0\" style={{ zIndex: '99999' }} action=\"/animes\">\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\"\n                        onClick={searchClick(makeListVisible)} onInput={searchAnimes(animeService,\n                            animeSearchListRequested, animeSearchListLoaded, animeSearchListClear,\n                            makeListVisible)} name=\"search\" />\n                    <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"button\" onClick={pushSearchButton(history)}  >Search</button>\n                </form>\n            </div >\n        </nav >\n    )\n}\n\nconst pushSearchButton = (history) => (event) => {\n    const value = document.querySelector('.search-form').children[0].value;\n    history.push(`/animes?search=${value}`);\n\n}\n\nconst searchAnimes = (animeService, request, loading, clearing, visible) => (event) => {\n    visible();\n    if (event.target.value.length === 0) {\n        clearing();\n    }\n    else {\n        request();\n        animeService.searchAnimes(event.target.value).then(res => loading(res))\n    }\n}\n\n//Make refactoring \n\nconst searchClick = (visible) => (event) => {\n    const form = document.querySelector('.search-form');\n    const nav = document.querySelector('nav');\n    const searchList = document.querySelector('.search-list');\n\n    visible();\n    searchList.style.width = window.getComputedStyle(form).getPropertyValue(\"width\")\n    searchList.style.top = window.getComputedStyle(nav).getPropertyValue(\"height\")\n    searchList.style.right = window.getComputedStyle(nav).getPropertyValue(\"padding-right\")\n\n}\n\nlet shift = false;\nwindow.addEventListener(`resize`, event => {\n\n    const form = document.querySelector('.search-form')\n    const nav = document.querySelector('nav');\n    const toggle = document.querySelector('.navbar-toggler');\n    if (window.getComputedStyle(toggle).getPropertyValue(\"display\") != 'none' && shift === false) {\n        store.dispatch(makeListInvisible())\n        shift = true;\n    }\n\n    if (window.getComputedStyle(toggle).getPropertyValue(\"display\") != 'block' && shift === true) {\n        store.dispatch(makeListInvisible())\n        shift = false;\n    }\n    const searchList = document.querySelector('.search-list');\n    searchList.style.width = window.getComputedStyle(form).getPropertyValue(\"width\")\n    searchList.style.top = window.getComputedStyle(nav).getPropertyValue(\"height\")\n    searchList.style.right = window.getComputedStyle(nav).getPropertyValue(\"padding-right\")\n}, false);\n\n\n\n//Make refactoring \n\nconst actions = {\n    animeSearchListRequested, animeSearchListLoaded,\n    animeSearchListClear, makeListVisible, makeListInvisible\n}\n\nexport default withRouter(withAnimeService()(connect(null, actions)(AnimeHeader)));\n\n","import AnimeHeader from \"./anime-header\";\n\nexport default AnimeHeader;","import React from \"react\";\nimport './anime-list-item.css';\nimport { Link } from 'react-router-dom';\n\n\nconst AnimeListItem = ({ id, title, image }) => {\n    const url = `/animes/${id}`\n    return (\n\n        <div className=\"anime-item\">\n            <Link to={url} className=\"anime-field\" onMouseOver={changeItemSize} onMouseOut={changeItemSize}>\n                <img src={image} alt=\"cover\" className=\"anime-image\" />\n                <footer className=\"text-light\">\n                    {title}\n                </footer>\n            </Link >\n        </div>\n\n    )\n}\n\nconst changeItemSize = (event) => {\n    const img = event.nativeEvent.path[1].children[0];\n    if (event.type == \"mouseover\") {\n        img.style.height = '334.4px'\n        img.style.width = '100%';\n    }\n\n    else {\n        img.style.height = '313.5px'\n        img.style.width = '95%'\n    }\n}\n\nexport default AnimeListItem;","import AnimeListItem from \"./anime-list-item\";\n\nexport default AnimeListItem;","import React, { Component } from \"react\";\nimport './anime-list.css';\nimport AnimeListItem from \"../anime-list-item\";\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\nimport * as qs from 'qs';\n\n\nconst AnimeList = ({ animes }) => {\n    return (\n        <ul className=\"anime-list\">\n            {\n                animes.map((anime) => {\n                    return (\n                        <li key={anime.id} >\n                            <AnimeListItem title={anime.name} image={anime.image} id={anime.id} />\n                        </li>\n                    )\n                })\n            }\n        </ul>\n    )\n}\n\nclass AnimeListContainer extends Component {\n\n    componentDidMount() {\n        this.props.animeListRequested()\n        this.searchCheck()\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.location !== prevProps.location) {\n            const { search } = (qs.parse(this.props.location.search, { ignoreQueryPrefix: true }))\n            this.props.animeListRequested()\n            this.searchCheck()\n        }\n    }\n\n    searchCheck() {\n        const { search } = (qs.parse(this.props.location.search, { ignoreQueryPrefix: true }))\n        if (search) {\n            this.props.animeService.searchAnimes(search, 30).then(res => this.props.animeListLoaded(res))\n            window.removeEventListener('scroll', this.scroll, false)\n        }\n        else {\n            this.props.animeService.getOngoings(15).then(res => this.props.animeListLoaded(res))\n            window.addEventListener('scroll', this.scroll, false)\n\n        }\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.scroll, false)\n    }\n\n    scroll = () => {\n        const block = document.querySelector('.anime-list');\n        const contentHeight = block.offsetHeight;\n        const yOffset = window.pageYOffset;\n        const window_height = window.innerHeight;\n        const y = yOffset + window_height;\n        if (y >= contentHeight) {\n            console.log(this)\n            this.props.animeListAnimesRequested()\n            this.props.animeService.getAdditionalOngoings(this.props.page, 15).then(res => this.props.animeListAnimesLoaded(res))\n        }\n    }\n    render() {\n        return <AnimeList animes={this.props.animes} />\n    }\n\n}\n\nconst mapStatetoProps = ({ animeList: { animes, loading, error, page } }) => {\n    return { animes, loading, error, page };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeListContainer)))","import AnimeList from \"./anime-list\";\n\nexport default AnimeList;","import React, { Component, useEffect, useState } from \"react\";\nimport './anime-details.css'\nimport { connect } from \"react-redux\";\nimport withAnimeService from \"../hoc\";\nimport * as actions from '../../actions'\nimport { withRouter } from \"react-router\";\n\n\nconst AnimeDetails = ({ anime, removeAnime, addAnime, myList, episodesRef, gradeRef }) => {\n    const animeListItem = myList.find(animeListItem => animeListItem.id === anime.id);\n    const [category, setCategory] = useState(\"No category\")\n    const [episodes, setEpisodes] = useState(0)\n    const [grade, setGrade] = useState(0)\n    useEffect(() => {\n        if (animeListItem) {\n            setCategory(animeListItem.category);\n            setEpisodes(animeListItem.episodes);\n            setGrade(animeListItem.grade);\n        }\n        else {\n            setCategory(\"No category\")\n            setEpisodes(0)\n            setGrade(0)\n        }\n\n        if (category === \"No category\") {\n            episodesRef.current.style.visibility = \"hidden\"\n            gradeRef.current.style.visibility = \"hidden\"\n            episodesRef.current.style.position = \"absolute\"\n            gradeRef.current.style.position = \"absolute\"\n\n        }\n        else {\n            episodesRef.current.style.visibility = \"visible\"\n            gradeRef.current.style.visibility = \"visible\"\n            episodesRef.current.style.position = \"static\"\n            gradeRef.current.style.position = \"static\"\n        }\n\n        if (category === \"Watched\" || category === \"No category\") {\n            episodesRef.current.children[1].children[0].style.visibility = \"hidden\"\n            episodesRef.current.children[1].children[1].style.visibility = \"hidden\"\n        }\n        else {\n            episodesRef.current.children[1].children[0].style.visibility = \"visible\"\n            episodesRef.current.children[1].children[1].style.visibility = \"visible\"\n        }\n    })\n    return (\n        <div className=\"container-fluid mt-5 text-light\" >\n            <div className=\"row\">\n                <div className=\"col-xl-2 col-lg-3 col-md-4 d-flex flex-column justify-content-center\">\n                    <img src={anime.image} className=\"img-fluid rounded mb-3 \" />\n                    <select value={category} onChange={selectCategory({ category, episodes, grade },\n                        { removeAnime, addAnime, anime })} class=\"custom-select mb-3\">\n                        <option value=\"No category\">Нет категории</option>\n                        <option value=\"Scheduled\">Запланированно</option>\n                        <option value=\"Watching\">Смотрю</option>\n                        <option value=\"Watched\">Просмотрено</option>\n                        <option value=\"Dropped\">Брошено</option>\n                    </select>\n                    <div ref={episodesRef} className=\"mb-3 d-flex justify-content-between align-items-center\" style={{ visibility: \"hidden\", position: \"absolute\" }}>\n                        <span className=\"\">Эпизоды: <span>{episodes}</span>/<span>{anime.episodes > 0 ? anime.episodes : anime.episodes_aired}</span></span>\n                        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic mixed styles example\">\n                            <button type=\"button\" onClick={pushButton(-1, { category, episodes, grade },\n                                { removeAnime, addAnime, anime })} class=\"btn btn-danger\">-</button>\n                            <button type=\"button\" onClick={pushButton(1, { category, episodes, grade },\n                                { removeAnime, addAnime, anime })} class=\"btn btn-success\">+</button>\n                        </div>\n                    </div>\n                    <div ref={gradeRef} className=\"mb-3 d-flex justify-content-center align-items-baseline\" style={{ visibility: \"hidden\", position: \"absolute\" }}>\n                        <span className=\"col-5 p-0\" style={{ display: \"inline-block\" }}>Оценка:</span>\n                        <div className=\"input-group mb-3\">\n                            <span className=\"input-group-text bg-warning\" id=\"basic-addon1\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-star\" viewBox=\"0 0 16 16\">\n                                <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.522-3.356c.33-.314.16-.888-.282-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288L8 2.223l1.847 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.565.565 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\n                            </svg></span>\n                            <input type=\"number\" value={grade} onChange={addGrade({ category, episodes, grade },\n                                { removeAnime, addAnime, anime })} className=\"form-control\" placeholder=\"Оценка\" aria-label=\"Grade\" aria-describedby=\"basic-addon1\" max=\"10\" min=\"0\" />\n                        </div>\n\n                    </div>\n                </div>\n                <div className=\"col\">\n                    <h1 className=\"\">{anime.name}</h1>\n                    <ul className=\"p-0\">\n                        <li className=\"mb-3\">Рейтинг: <span className=\"text-secondary\">{anime.score}</span></li>\n                        <li className=\"mb-3\">Количество эпизодов:  <span className=\"text-secondary\">{anime.episodes > 0 ? anime.episodes : anime.episodes_aired}</span></li>\n                        <li className=\"mb-3\">Жанры: {anime.genres.map((genre, index) => {\n\n                            if (index !== anime.genres.length - 1) {\n                                return (\n                                    <span className=\"text-secondary\"> {genre.russian},</span>\n                                )\n                            }\n                            else {\n                                return (\n                                    <span className=\"text-secondary\"> {genre.russian}</span>\n                                )\n                            }\n                        }\n                        )}</li>\n                        <li className=\"mb-3\">Описание: <span className=\"text-secondary\">{anime.description}</span></li>\n                    </ul>\n                </div>\n\n            </div>\n        </div >\n\n    )\n}\n\nconst selectCategory = (state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    const episodesLimit = anime.episodes > 0 ? anime.episodes : anime.episodes_aired;\n    removeAnime(anime)\n    if (event.target.value !== \"No category\") {\n        if (event.target.value === \"Watched\") episodes = episodesLimit;\n        const animeItem = { id: anime.id, name: anime.name, episodes, grade, category: event.target.value, episodesLimit }\n        addAnime(animeItem)\n    }\n}\n\nconst pushButton = (number, state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    let episodesNum = episodes + number;\n    const episodesLimit = anime.episodes > 0 ? anime.episodes : anime.episodes_aired;\n    removeAnime(anime)\n    if (episodesNum < 0) episodesNum = 0\n    if (episodesNum >= episodesLimit) {\n        episodesNum = episodesLimit\n        category = \"Watched\"\n    }\n    const animeItem = { id: anime.id, name: anime.name, episodes: episodesNum, grade, category, episodesLimit }\n    addAnime(animeItem)\n}\n\nconst addGrade = (state, animeServ) => (event) => {\n    let { category, episodes, grade } = state;\n    const { removeAnime, addAnime, anime } = animeServ;\n    const episodesLimit = anime.episodes > 0 ? anime.episodes : anime.episodes_aired;\n    let value = event.target.value;\n    if (value > 10) value = 10\n    if (value < 0) value = 0\n    removeAnime(anime)\n    const animeItem = { id: anime.id, name: anime.name, episodes, grade: value, category, episodesLimit }\n    addAnime(animeItem)\n}\nclass AnimeDetailsContainer extends Component {\n    constructor(props) {\n        super(props)\n        this.episodes = React.createRef();\n        this.grade = React.createRef();\n        this.category = React.createRef();\n\n    }\n\n    componentDidMount() {\n        this.props.animeRequested()\n        this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location != this.props.location) {\n            console.log(\"detail update\")\n\n            this.props.animeRequested()\n            this.props.animeService.getAnime(this.props.id).then(res => this.props.animeLoaded(res))\n        }\n\n    }\n\n    render() {\n        if (Object.keys(this.props.anime).length) {\n            return <AnimeDetails anime={this.props.anime} episodesRef={this.episodes}\n                gradeRef={this.grade} removeAnime={this.props.removeFromMyList} addAnime={this.props.addToMyList}\n                myList={this.props.animes} category={this.category} />\n        }\n        else {\n            return \"nnnn\"\n        }\n    }\n}\n\n\n\nconst mapStatetoProps = ({ animeDetails: { anime, loading, error }, myList: { animes } }) => {\n    return { anime, loading, error, animes };\n};\n\nexport default withRouter(withAnimeService()(connect(mapStatetoProps, actions)(AnimeDetailsContainer)))\n","import AnimeDetails from \"./anime-details\";\n\nexport default AnimeDetails;","import AnimeSearchListItem from \"./anime-search-list-item\";\n\nexport default AnimeSearchListItem;","import React from \"react\";\nimport './anime-search-list-item.css';\nimport { Link } from 'react-router-dom';\n\n\nconst AnimeSearchListItem = ({ id, name, image }) => {\n    const url = `/animes/${id}`\n    return (\n        <Link to={url}>\n            <div class=\"container\">\n                <div class=\"row\">\n                    <div class=\"col-3\">\n                        <img src={image} className=\"anime-image-for-search\" />\n                    </div>\n                    <div class=\"col-9 d-flex flex-column justify-content-center text-start\">\n                        <span className=\"anime-name-search\">{name}</span>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default AnimeSearchListItem;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport './anime-search-list.css'\nimport AnimeSearchListItem from \"../anime-search-list-item\";\nimport { makeListInvisible } from '../../actions'\nconst AnimeSearchList = ({ animes, visibility, search, makeListInvisible }) => {\n    console.log('this visibility')\n    console.log(visibility)\n    console.log(animes)\n    console.log(search)\n    return (\n        <div className=\"lay\" style={{ visibility: visibility }} onClick={() => makeListInvisible()}>\n            <div className=\"search-list d-flex justify-content-start flex-direction-column\">\n                <ul class=\"scroll\" style={{ color: \"black\" }}>\n                    {\n                        animes.map((anime) => {\n                            return (\n                                <li key={anime.id} className=\"search-item border border-dark border-bottom-5\">\n                                    <AnimeSearchListItem name={anime.name} id={anime.id} image={anime.imageForSearch} />\n                                </li>\n                            )\n                        })\n                    }\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = ({ animeSearchList: { animes, visibility, search } }) => {\n    return { animes, visibility, search }\n\n}\n\nconst actions = { makeListInvisible }\n\n\nexport default connect(mapStateToProps, actions)(AnimeSearchList);","import AnimeSearchList from \"./anime-search-list\";\n\nexport default AnimeSearchList;","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./my-list-item.css\"\nimport { addToMyList, removeFromMyList } from \"../../actions\"\nimport { connect } from \"react-redux\";\n\n\n\nconst MyListItem = ({ anime, addToMyList, removeFromMyList }) => {\n    const [grade, setGrade] = useState(anime.grade);\n    const [episodes, setEpisodes] = useState(anime.episodes);\n    return (\n        <Fragment>\n            <td className=\"name\">\n                <Link to={`/animes/${anime.id}`}>{anime.name}</Link>\n            </td>\n            <td className=\"episodes\">\n                <div className=\"content-wrapper\">\n                    <input className=\"my-list-item-stats\" type=\"text\" value={episodes} onBlur={changeEpisodes(anime, episodes, addToMyList, removeFromMyList)}\n                        onChange={handleEpisodesChange(setEpisodes, anime.episodesLimit)} />\n                </div>\n            </td>\n            <td className=\"grade\">\n                <div className=\"content-wrapper\">\n                    <input className=\"my-list-item-stats\" onBlur={changeGrade(anime, grade, addToMyList, removeFromMyList)} type=\"text\"\n                        onChange={handeGradeChange(setGrade)} value={grade} />\n                </div>\n            </td>\n        </Fragment>\n    )\n}\n\nconst handleEpisodesChange = (setEpisodes, limit) => (event) => {\n    let value = parseInt(event.target.value.replace(/\\D/, ''))\n    if (event.target.value == '') value = 0;\n    if (value <= limit && value >= 0) {\n        setEpisodes(value)\n    }\n}\n\nconst changeEpisodes = (anime, episodes, addToMyList, removeFromMyList) => () => {\n    removeFromMyList(anime)\n    const newItem = { ...anime, episodes }\n    addToMyList(newItem);\n}\nconst handeGradeChange = (setGrade) => (event) => {\n    let value = parseInt(event.target.value.replace(/\\D/, ''))\n    if (event.target.value == '') value = 0;\n    if (value <= 10 && value >= 0) {\n        setGrade(value)\n    }\n\n}\nconst changeGrade = (anime, grade, addToMyList, removeFromMyList) => () => {\n    console.log(anime)\n    removeFromMyList(anime)\n    const newItem = { ...anime, grade }\n    addToMyList(newItem);\n}\n\nconst actions = { addToMyList, removeFromMyList }\nexport default connect(null, actions)(MyListItem);","import MyListItem from \"./my-list-item\";\n\nexport default MyListItem;","import React, { Fragment } from \"react\";\nimport MyListItem from \"../my-list-item\";\nimport { connect } from \"react-redux\";\nimport \"./my-list.css\"\n\nconst Table = ({ animes }) => {\n    console.log(animes)\n    return (\n        <table class=\"table table-dark\">\n            <thead>\n                <tr>\n                    <th className=\"index\" scope=\"col\">#</th>\n                    <th className=\"name\" scope=\"col\">Название</th>\n                    <th className=\"episodes\" scope=\"col\">Количество Эпизодов</th>\n                    <th className=\"grade\" scope=\"col\">Оценка</th>\n                </tr>\n            </thead>\n            <tbody>\n                {animes.map((anime, index) => {\n                    return (\n                        <tr key={anime.id}>\n                            <th className=\"index\" scope=\"row\">{index + 1}</th>\n                            <MyListItem anime={anime} />\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\n\nconst MyList = ({ animes }) => {\n    const scheduled = animes.filter(anime => anime.category === \"Scheduled\");\n    const watching = animes.filter(anime => anime.category === \"Watching\");\n    const watched = animes.filter(anime => anime.category === \"Watched\");\n    const dropped = animes.filter(anime => anime.category === \"Dropped\");\n\n\n    return (\n        <Fragment>\n            <h1 className=\"text-light text-center\">Запланированное</h1>\n            <Table animes={scheduled} />\n            <h1 className=\"text-light text-center\">Смотрю</h1>\n            <Table animes={watching} />\n            <h1 className=\"text-light text-center\">Просмотрено</h1>\n            <Table animes={watched} />\n            <h1 className=\"text-light text-center\">Брошено</h1>\n            <Table animes={dropped} />\n        </Fragment>\n    )\n}\n\nconst mapStatetoProps = ({ myList: { animes } }) => {\n    return { animes };\n};\n\nexport default connect(mapStatetoProps)(MyList);","import MyList from \"./my-list\";\nexport default MyList","import App from './app';\n\nexport default App;","import React from 'react'\nimport AnimeHeader from '../anime-header'\nimport AnimeList from '../anime-list'\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport AnimeDetails from '../anime-details';\nimport AnimeSearchList from '../anime-search-list';\nimport MyList from '../my-list';\nimport './app.css'\n\n\nconst App = () => {\n    return (\n        <main className=\"bg-dark\" style={{ minHeight: \"100vh\" }} >\n            <AnimeHeader />\n            <AnimeSearchList />\n            <Switch>\n                <Route path=\"/animes/search/:name\" render={() => {\n                    console.log('ROUUUUTE');\n                    return (\n                        <AnimeList url={\"rrrr\"} />\n                    )\n                }} exact />\n\n\n                <Route path=\"/animes\" component={AnimeList} exact />\n\n                <Route path=\"/animes/:id\" render={({ match }) => {\n                    const { id } = match.params;\n                    return <AnimeDetails id={id} />\n                }} exact />\n\n                <Route path=\"/myList\" component={MyList} exact />\n\n            </Switch>\n        </main >\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app'\nimport AnimeService from './services/anime-service';\nimport { AnimeServiceProvider } from './components/anime-service-context';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nconst animeService = new AnimeService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <AnimeServiceProvider value={animeService}>\n      <Router>\n        <App />\n      </Router>\n    </AnimeServiceProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n","import axios from 'axios';\n\nexport default class AnimeService {\n    _apiBase = 'https://shikimori.one/api';\n    getResource = async (url, config = {}) => {\n        return (await axios.get(`${this._apiBase}${url}`, { params: config })).data;\n    }\n\n    getOngoings = async (num) => {\n        const config = { status: \"ongoing\", order: \"ranked\", limit: num };\n        const res = await this.getResource('/animes/', config);\n        //res = await Promise.all(res.map(this._transformAnime));\n        return res.map(this._transformAnime);\n    }\n    //30735 creates the mistake \n    getRandomCharacters = async (num) => {\n        const idArray = [];\n        const characters = [];\n        let i = 0;\n        while (i < num) {\n            const id = Math.floor(Math.random() * 100000);\n            if (id in idArray) continue\n            else {\n                idArray.push(id)\n                try {\n                    const res = await this.getResource(`/characters/${id}`);\n                    characters.push(res);\n                }\n                catch {\n                    console.log(\"mistake\")\n                    continue\n                }\n                i = i + 1;\n            }\n        }\n        return characters.map(this._transformCharacter)\n    }\n\n    getAdditionalOngoings = async (page = 1, num = 10) => {\n        const config = { status: \"ongoing\", order: \"ranked\", limit: num, page: page };\n        const res = await this.getResource('/animes/', config);\n        return res.map(this._transformAnime);\n\n    }\n\n    getAnime = async (id) => {\n        const res = await this.getResource(`/animes/${id}`);\n        return this._transformAnime(res);\n    }\n\n    searchAnimes = async (name, num = 10) => {\n        const config = { order: \"ranked\", limit: num, search: name };\n        const res = await this.getResource('/animes/', config);\n        return res.map(this._transformAnime);\n    }\n\n    _transformAnime = (anime) => {\n        return {\n            ...anime,\n            name: anime.russian,\n            image: \"https://shikimori.one\" + anime.image.original,\n            imageForSearch: \"https://shikimori.one\" + anime.image.x48\n        }\n    }\n\n    _transformCharacter = (character) => {\n        return {\n            id: character.id,\n            russian: character.russian,\n            image: \"https://shikimori.one\" + character.image.original\n        }\n    }\n\n\n}"],"sourceRoot":""}